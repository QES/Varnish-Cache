# Makefile.in generated by automake 1.11.1 from Makefile.am.
# bin/varnishd/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#



pkgdatadir = $(datadir)/varnish
pkgincludedir = $(includedir)/varnish
pkglibdir = $(libdir)/varnish
pkglibexecdir = $(libexecdir)/varnish
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
target_triplet = x86_64-unknown-linux-gnu
sbin_PROGRAMS = varnishd$(EXEEXT)
subdir = bin/varnishd
DIST_COMMON = $(dist_man_MANS) $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_pthread.m4 \
	$(top_srcdir)/m4/ld-version-script.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(sbindir)" "$(DESTDIR)$(man1dir)"
PROGRAMS = $(sbin_PROGRAMS)
am_varnishd_OBJECTS = varnishd-cache_acceptor.$(OBJEXT) \
	varnishd-cache_waiter_epoll.$(OBJEXT) \
	varnishd-cache_waiter_kqueue.$(OBJEXT) \
	varnishd-cache_waiter_poll.$(OBJEXT) \
	varnishd-cache_waiter_ports.$(OBJEXT) \
	varnishd-cache_backend.$(OBJEXT) \
	varnishd-cache_backend_cfg.$(OBJEXT) \
	varnishd-cache_backend_poll.$(OBJEXT) \
	varnishd-cache_ban.$(OBJEXT) varnishd-cache_center.$(OBJEXT) \
	varnishd-cache_cli.$(OBJEXT) varnishd-cache_dir.$(OBJEXT) \
	varnishd-cache_dir_random.$(OBJEXT) \
	varnishd-cache_dir_dns.$(OBJEXT) \
	varnishd-cache_dir_round_robin.$(OBJEXT) \
	varnishd-cache_esi_fetch.$(OBJEXT) \
	varnishd-cache_esi_parse.$(OBJEXT) \
	varnishd-cache_esi_deliver.$(OBJEXT) \
	varnishd-cache_expire.$(OBJEXT) varnishd-cache_fetch.$(OBJEXT) \
	varnishd-cache_gzip.$(OBJEXT) varnishd-cache_hash.$(OBJEXT) \
	varnishd-cache_http.$(OBJEXT) \
	varnishd-cache_httpconn.$(OBJEXT) \
	varnishd-cache_main.$(OBJEXT) varnishd-cache_lck.$(OBJEXT) \
	varnishd-cache_panic.$(OBJEXT) varnishd-cache_pipe.$(OBJEXT) \
	varnishd-cache_pool.$(OBJEXT) \
	varnishd-cache_response.$(OBJEXT) \
	varnishd-cache_session.$(OBJEXT) \
	varnishd-cache_shmlog.$(OBJEXT) varnishd-cache_vary.$(OBJEXT) \
	varnishd-cache_vcl.$(OBJEXT) varnishd-cache_vrt.$(OBJEXT) \
	varnishd-cache_vrt_re.$(OBJEXT) \
	varnishd-cache_vrt_var.$(OBJEXT) \
	varnishd-cache_vrt_vmod.$(OBJEXT) varnishd-cache_wrw.$(OBJEXT) \
	varnishd-cache_ws.$(OBJEXT) varnishd-hash_classic.$(OBJEXT) \
	varnishd-hash_critbit.$(OBJEXT) \
	varnishd-hash_simple_list.$(OBJEXT) \
	varnishd-mgt_child.$(OBJEXT) varnishd-mgt_cli.$(OBJEXT) \
	varnishd-mgt_param.$(OBJEXT) varnishd-mgt_pool.$(OBJEXT) \
	varnishd-mgt_sandbox.$(OBJEXT) \
	varnishd-mgt_sandbox_solaris.$(OBJEXT) \
	varnishd-mgt_shmem.$(OBJEXT) varnishd-mgt_vcc.$(OBJEXT) \
	varnishd-rfc2616.$(OBJEXT) varnishd-stevedore.$(OBJEXT) \
	varnishd-storage_file.$(OBJEXT) \
	varnishd-storage_malloc.$(OBJEXT) \
	varnishd-storage_persistent.$(OBJEXT) \
	varnishd-storage_persistent_mgt.$(OBJEXT) \
	varnishd-storage_persistent_silo.$(OBJEXT) \
	varnishd-storage_persistent_subr.$(OBJEXT) \
	varnishd-storage_synth.$(OBJEXT) \
	varnishd-storage_umem.$(OBJEXT) \
	varnishd-stevedore_utils.$(OBJEXT) varnishd-varnishd.$(OBJEXT) \
	varnishd-vsm.$(OBJEXT)
varnishd_OBJECTS = $(am_varnishd_OBJECTS)
am__DEPENDENCIES_1 =
varnishd_DEPENDENCIES = $(top_builddir)/lib/libvarnish/libvarnish.la \
	$(top_builddir)/lib/libvarnishcompat/libvarnishcompat.la \
	$(top_builddir)/lib/libvcl/libvcl.la \
	$(top_builddir)/lib/libvgz/libvgz.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
varnishd_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(varnishd_CFLAGS) $(CFLAGS) \
	$(varnishd_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(varnishd_SOURCES)
DIST_SOURCES = $(varnishd_SOURCES)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
man1dir = $(mandir)/man1
NROFF = nroff
MANS = $(dist_man_MANS)
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/ec2-user/varnish-3.0.3/missing --run aclocal-1.11
AMTAR = ${SHELL} /home/ec2-user/varnish-3.0.3/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/ec2-user/varnish-3.0.3/missing --run autoconf
AUTOHEADER = ${SHELL} /home/ec2-user/varnish-3.0.3/missing --run autoheader
AUTOMAKE = ${SHELL} /home/ec2-user/varnish-3.0.3/missing --run automake-1.11
AWK = gawk
CC = gcc -std=gnu99
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -pthread -Wextra -Wno-missing-field-initializers -Wno-sign-compare
CPP = gcc -E
CPPFLAGS = 
CURSES_LIBS = -lcurses 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DL_LIBS = -ldl 
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
JEMALLOC_LDADD = $(top_builddir)/lib/libjemalloc/libjemalloc_mt.la
JEMALLOC_SUBDIR = libjemalloc
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBEDIT_CFLAGS = 
LIBEDIT_LIBS = 
LIBM = -lm
LIBOBJS = 
LIBS =  
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBUMEM = 
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/ec2-user/varnish-3.0.3/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
NET_LIBS = -lnsl 
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = varnish
PACKAGE_BUGREPORT = varnish-dev@varnish-cache.org
PACKAGE_NAME = Varnish
PACKAGE_STRING = Varnish 3.0.3
PACKAGE_TARNAME = varnish
PACKAGE_VERSION = 3.0.3
PATH_SEPARATOR = :
PCRE_CFLAGS =  
PCRE_CONFIG = 
PCRE_LIBS = -lpcre  
PKG_CONFIG = /usr/bin/pkg-config
PTHREAD_CC = gcc -std=gnu99
PTHREAD_CFLAGS = -pthread
PTHREAD_LIBS = 
PYTHON = python2.6
RANLIB = ranlib
RST2HTML = rst2html
RST2MAN = rst2man
RT_LIBS = -lrt 
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VARNISH_STATE_DIR = ${localstatedir}/varnish
VCC_CC = exec gcc -std=gnu99  -pthread -fpic -shared -Wl,-x -o %o %s
VERSION = 3.0.3
XSLTPROC = xsltproc
abs_builddir = /home/ec2-user/varnish-3.0.3/bin/varnishd
abs_srcdir = /home/ec2-user/varnish-3.0.3/bin/varnishd
abs_top_builddir = /home/ec2-user/varnish-3.0.3
abs_top_srcdir = /home/ec2-user/varnish-3.0.3
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
ax_pthread_config = 
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/ec2-user/varnish-3.0.3/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
libvgz_extra_cflags = 
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = x86_64-unknown-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = unknown
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
varnishconfdir = ${sysconfdir}/varnish
INCLUDES = \
	-I$(top_srcdir)/include \
	-I$(top_srcdir)/lib/libvgz \
	-I$(top_builddir)/include

dist_man_MANS = varnishd.1
varnishd_SOURCES = \
	cache_acceptor.c \
	cache_waiter_epoll.c \
	cache_waiter_kqueue.c \
	cache_waiter_poll.c \
	cache_waiter_ports.c \
	cache_backend.c \
	cache_backend_cfg.c \
	cache_backend_poll.c \
	cache_ban.c \
	cache_center.c \
	cache_cli.c \
	cache_dir.c \
	cache_dir_random.c \
	cache_dir_dns.c \
	cache_dir_round_robin.c \
	cache_esi_fetch.c \
	cache_esi_parse.c \
	cache_esi_deliver.c \
	cache_expire.c \
	cache_fetch.c \
	cache_gzip.c \
	cache_hash.c \
	cache_http.c \
	cache_httpconn.c \
	cache_main.c \
	cache_lck.c \
	cache_panic.c \
	cache_pipe.c \
	cache_pool.c \
	cache_response.c \
	cache_session.c \
	cache_shmlog.c \
	cache_vary.c \
	cache_vcl.c \
	cache_vrt.c \
	cache_vrt_re.c \
	cache_vrt_var.c \
	cache_vrt_vmod.c \
	cache_wrw.c \
	cache_ws.c \
	hash_classic.c \
	hash_critbit.c \
	hash_simple_list.c \
	mgt_child.c \
	mgt_cli.c \
	mgt_param.c \
	mgt_pool.c \
	mgt_sandbox.c \
	mgt_sandbox_solaris.c \
	mgt_shmem.c \
	mgt_vcc.c \
	rfc2616.c \
	stevedore.c \
	storage_file.c \
	storage_malloc.c \
	storage_persistent.c \
	storage_persistent_mgt.c \
	storage_persistent_silo.c \
	storage_persistent_subr.c \
	storage_synth.c \
	storage_umem.c \
	stevedore_utils.c \
	varnishd.c \
	vsm.c

noinst_HEADERS = \
	acct_fields.h \
	body_status.h \
	cache.h \
	cache_backend.h \
	cache_backend_poll.h \
	cache_esi.h \
	cache_waiter.h \
	common.h \
	default_vcl.h \
	hash_slinger.h \
	heritage.h \
	locks.h \
	mgt.h \
	mgt_cli.h \
	steps.h \
	stevedore.h \
	storage_persistent.h \
	vparam.h

varnishd_CFLAGS = \
	  \
        -DVARNISH_STATE_DIR='"${VARNISH_STATE_DIR}"' \
	-DVARNISH_VMOD_DIR='"${pkglibdir}/vmods"' \
	-DVARNISH_VCL_DIR='"${varnishconfdir}"'

varnishd_LDFLAGS = -export-dynamic
varnishd_LDADD = \
	$(top_builddir)/lib/libvarnish/libvarnish.la \
	$(top_builddir)/lib/libvarnishcompat/libvarnishcompat.la \
	$(top_builddir)/lib/libvcl/libvcl.la \
	$(top_builddir)/lib/libvgz/libvgz.la \
	$(top_builddir)/lib/libjemalloc/libjemalloc_mt.la \
	-lpcre   \
	${DL_LIBS} ${PTHREAD_LIBS} ${NET_LIBS} ${LIBM} ${LIBUMEM}

EXTRA_DIST = default.vcl
DISTCLEANFILES = default_vcl.h
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign bin/varnishd/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign bin/varnishd/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-sbinPROGRAMS: $(sbin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(sbindir)" || $(MKDIR_P) "$(DESTDIR)$(sbindir)"
	@list='$(sbin_PROGRAMS)'; test -n "$(sbindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(sbindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(sbindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-sbinPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(sbin_PROGRAMS)'; test -n "$(sbindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(sbindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(sbindir)" && rm -f $$files

clean-sbinPROGRAMS:
	@list='$(sbin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
varnishd$(EXEEXT): $(varnishd_OBJECTS) $(varnishd_DEPENDENCIES) 
	@rm -f varnishd$(EXEEXT)
	$(varnishd_LINK) $(varnishd_OBJECTS) $(varnishd_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/varnishd-cache_acceptor.Po
include ./$(DEPDIR)/varnishd-cache_backend.Po
include ./$(DEPDIR)/varnishd-cache_backend_cfg.Po
include ./$(DEPDIR)/varnishd-cache_backend_poll.Po
include ./$(DEPDIR)/varnishd-cache_ban.Po
include ./$(DEPDIR)/varnishd-cache_center.Po
include ./$(DEPDIR)/varnishd-cache_cli.Po
include ./$(DEPDIR)/varnishd-cache_dir.Po
include ./$(DEPDIR)/varnishd-cache_dir_dns.Po
include ./$(DEPDIR)/varnishd-cache_dir_random.Po
include ./$(DEPDIR)/varnishd-cache_dir_round_robin.Po
include ./$(DEPDIR)/varnishd-cache_esi_deliver.Po
include ./$(DEPDIR)/varnishd-cache_esi_fetch.Po
include ./$(DEPDIR)/varnishd-cache_esi_parse.Po
include ./$(DEPDIR)/varnishd-cache_expire.Po
include ./$(DEPDIR)/varnishd-cache_fetch.Po
include ./$(DEPDIR)/varnishd-cache_gzip.Po
include ./$(DEPDIR)/varnishd-cache_hash.Po
include ./$(DEPDIR)/varnishd-cache_http.Po
include ./$(DEPDIR)/varnishd-cache_httpconn.Po
include ./$(DEPDIR)/varnishd-cache_lck.Po
include ./$(DEPDIR)/varnishd-cache_main.Po
include ./$(DEPDIR)/varnishd-cache_panic.Po
include ./$(DEPDIR)/varnishd-cache_pipe.Po
include ./$(DEPDIR)/varnishd-cache_pool.Po
include ./$(DEPDIR)/varnishd-cache_response.Po
include ./$(DEPDIR)/varnishd-cache_session.Po
include ./$(DEPDIR)/varnishd-cache_shmlog.Po
include ./$(DEPDIR)/varnishd-cache_vary.Po
include ./$(DEPDIR)/varnishd-cache_vcl.Po
include ./$(DEPDIR)/varnishd-cache_vrt.Po
include ./$(DEPDIR)/varnishd-cache_vrt_re.Po
include ./$(DEPDIR)/varnishd-cache_vrt_var.Po
include ./$(DEPDIR)/varnishd-cache_vrt_vmod.Po
include ./$(DEPDIR)/varnishd-cache_waiter_epoll.Po
include ./$(DEPDIR)/varnishd-cache_waiter_kqueue.Po
include ./$(DEPDIR)/varnishd-cache_waiter_poll.Po
include ./$(DEPDIR)/varnishd-cache_waiter_ports.Po
include ./$(DEPDIR)/varnishd-cache_wrw.Po
include ./$(DEPDIR)/varnishd-cache_ws.Po
include ./$(DEPDIR)/varnishd-hash_classic.Po
include ./$(DEPDIR)/varnishd-hash_critbit.Po
include ./$(DEPDIR)/varnishd-hash_simple_list.Po
include ./$(DEPDIR)/varnishd-mgt_child.Po
include ./$(DEPDIR)/varnishd-mgt_cli.Po
include ./$(DEPDIR)/varnishd-mgt_param.Po
include ./$(DEPDIR)/varnishd-mgt_pool.Po
include ./$(DEPDIR)/varnishd-mgt_sandbox.Po
include ./$(DEPDIR)/varnishd-mgt_sandbox_solaris.Po
include ./$(DEPDIR)/varnishd-mgt_shmem.Po
include ./$(DEPDIR)/varnishd-mgt_vcc.Po
include ./$(DEPDIR)/varnishd-rfc2616.Po
include ./$(DEPDIR)/varnishd-stevedore.Po
include ./$(DEPDIR)/varnishd-stevedore_utils.Po
include ./$(DEPDIR)/varnishd-storage_file.Po
include ./$(DEPDIR)/varnishd-storage_malloc.Po
include ./$(DEPDIR)/varnishd-storage_persistent.Po
include ./$(DEPDIR)/varnishd-storage_persistent_mgt.Po
include ./$(DEPDIR)/varnishd-storage_persistent_silo.Po
include ./$(DEPDIR)/varnishd-storage_persistent_subr.Po
include ./$(DEPDIR)/varnishd-storage_synth.Po
include ./$(DEPDIR)/varnishd-storage_umem.Po
include ./$(DEPDIR)/varnishd-varnishd.Po
include ./$(DEPDIR)/varnishd-vsm.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

varnishd-cache_acceptor.o: cache_acceptor.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_acceptor.o -MD -MP -MF $(DEPDIR)/varnishd-cache_acceptor.Tpo -c -o varnishd-cache_acceptor.o `test -f 'cache_acceptor.c' || echo '$(srcdir)/'`cache_acceptor.c
	$(am__mv) $(DEPDIR)/varnishd-cache_acceptor.Tpo $(DEPDIR)/varnishd-cache_acceptor.Po
#	source='cache_acceptor.c' object='varnishd-cache_acceptor.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_acceptor.o `test -f 'cache_acceptor.c' || echo '$(srcdir)/'`cache_acceptor.c

varnishd-cache_acceptor.obj: cache_acceptor.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_acceptor.obj -MD -MP -MF $(DEPDIR)/varnishd-cache_acceptor.Tpo -c -o varnishd-cache_acceptor.obj `if test -f 'cache_acceptor.c'; then $(CYGPATH_W) 'cache_acceptor.c'; else $(CYGPATH_W) '$(srcdir)/cache_acceptor.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-cache_acceptor.Tpo $(DEPDIR)/varnishd-cache_acceptor.Po
#	source='cache_acceptor.c' object='varnishd-cache_acceptor.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_acceptor.obj `if test -f 'cache_acceptor.c'; then $(CYGPATH_W) 'cache_acceptor.c'; else $(CYGPATH_W) '$(srcdir)/cache_acceptor.c'; fi`

varnishd-cache_waiter_epoll.o: cache_waiter_epoll.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_waiter_epoll.o -MD -MP -MF $(DEPDIR)/varnishd-cache_waiter_epoll.Tpo -c -o varnishd-cache_waiter_epoll.o `test -f 'cache_waiter_epoll.c' || echo '$(srcdir)/'`cache_waiter_epoll.c
	$(am__mv) $(DEPDIR)/varnishd-cache_waiter_epoll.Tpo $(DEPDIR)/varnishd-cache_waiter_epoll.Po
#	source='cache_waiter_epoll.c' object='varnishd-cache_waiter_epoll.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_waiter_epoll.o `test -f 'cache_waiter_epoll.c' || echo '$(srcdir)/'`cache_waiter_epoll.c

varnishd-cache_waiter_epoll.obj: cache_waiter_epoll.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_waiter_epoll.obj -MD -MP -MF $(DEPDIR)/varnishd-cache_waiter_epoll.Tpo -c -o varnishd-cache_waiter_epoll.obj `if test -f 'cache_waiter_epoll.c'; then $(CYGPATH_W) 'cache_waiter_epoll.c'; else $(CYGPATH_W) '$(srcdir)/cache_waiter_epoll.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-cache_waiter_epoll.Tpo $(DEPDIR)/varnishd-cache_waiter_epoll.Po
#	source='cache_waiter_epoll.c' object='varnishd-cache_waiter_epoll.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_waiter_epoll.obj `if test -f 'cache_waiter_epoll.c'; then $(CYGPATH_W) 'cache_waiter_epoll.c'; else $(CYGPATH_W) '$(srcdir)/cache_waiter_epoll.c'; fi`

varnishd-cache_waiter_kqueue.o: cache_waiter_kqueue.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_waiter_kqueue.o -MD -MP -MF $(DEPDIR)/varnishd-cache_waiter_kqueue.Tpo -c -o varnishd-cache_waiter_kqueue.o `test -f 'cache_waiter_kqueue.c' || echo '$(srcdir)/'`cache_waiter_kqueue.c
	$(am__mv) $(DEPDIR)/varnishd-cache_waiter_kqueue.Tpo $(DEPDIR)/varnishd-cache_waiter_kqueue.Po
#	source='cache_waiter_kqueue.c' object='varnishd-cache_waiter_kqueue.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_waiter_kqueue.o `test -f 'cache_waiter_kqueue.c' || echo '$(srcdir)/'`cache_waiter_kqueue.c

varnishd-cache_waiter_kqueue.obj: cache_waiter_kqueue.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_waiter_kqueue.obj -MD -MP -MF $(DEPDIR)/varnishd-cache_waiter_kqueue.Tpo -c -o varnishd-cache_waiter_kqueue.obj `if test -f 'cache_waiter_kqueue.c'; then $(CYGPATH_W) 'cache_waiter_kqueue.c'; else $(CYGPATH_W) '$(srcdir)/cache_waiter_kqueue.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-cache_waiter_kqueue.Tpo $(DEPDIR)/varnishd-cache_waiter_kqueue.Po
#	source='cache_waiter_kqueue.c' object='varnishd-cache_waiter_kqueue.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_waiter_kqueue.obj `if test -f 'cache_waiter_kqueue.c'; then $(CYGPATH_W) 'cache_waiter_kqueue.c'; else $(CYGPATH_W) '$(srcdir)/cache_waiter_kqueue.c'; fi`

varnishd-cache_waiter_poll.o: cache_waiter_poll.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_waiter_poll.o -MD -MP -MF $(DEPDIR)/varnishd-cache_waiter_poll.Tpo -c -o varnishd-cache_waiter_poll.o `test -f 'cache_waiter_poll.c' || echo '$(srcdir)/'`cache_waiter_poll.c
	$(am__mv) $(DEPDIR)/varnishd-cache_waiter_poll.Tpo $(DEPDIR)/varnishd-cache_waiter_poll.Po
#	source='cache_waiter_poll.c' object='varnishd-cache_waiter_poll.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_waiter_poll.o `test -f 'cache_waiter_poll.c' || echo '$(srcdir)/'`cache_waiter_poll.c

varnishd-cache_waiter_poll.obj: cache_waiter_poll.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_waiter_poll.obj -MD -MP -MF $(DEPDIR)/varnishd-cache_waiter_poll.Tpo -c -o varnishd-cache_waiter_poll.obj `if test -f 'cache_waiter_poll.c'; then $(CYGPATH_W) 'cache_waiter_poll.c'; else $(CYGPATH_W) '$(srcdir)/cache_waiter_poll.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-cache_waiter_poll.Tpo $(DEPDIR)/varnishd-cache_waiter_poll.Po
#	source='cache_waiter_poll.c' object='varnishd-cache_waiter_poll.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_waiter_poll.obj `if test -f 'cache_waiter_poll.c'; then $(CYGPATH_W) 'cache_waiter_poll.c'; else $(CYGPATH_W) '$(srcdir)/cache_waiter_poll.c'; fi`

varnishd-cache_waiter_ports.o: cache_waiter_ports.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_waiter_ports.o -MD -MP -MF $(DEPDIR)/varnishd-cache_waiter_ports.Tpo -c -o varnishd-cache_waiter_ports.o `test -f 'cache_waiter_ports.c' || echo '$(srcdir)/'`cache_waiter_ports.c
	$(am__mv) $(DEPDIR)/varnishd-cache_waiter_ports.Tpo $(DEPDIR)/varnishd-cache_waiter_ports.Po
#	source='cache_waiter_ports.c' object='varnishd-cache_waiter_ports.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_waiter_ports.o `test -f 'cache_waiter_ports.c' || echo '$(srcdir)/'`cache_waiter_ports.c

varnishd-cache_waiter_ports.obj: cache_waiter_ports.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_waiter_ports.obj -MD -MP -MF $(DEPDIR)/varnishd-cache_waiter_ports.Tpo -c -o varnishd-cache_waiter_ports.obj `if test -f 'cache_waiter_ports.c'; then $(CYGPATH_W) 'cache_waiter_ports.c'; else $(CYGPATH_W) '$(srcdir)/cache_waiter_ports.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-cache_waiter_ports.Tpo $(DEPDIR)/varnishd-cache_waiter_ports.Po
#	source='cache_waiter_ports.c' object='varnishd-cache_waiter_ports.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_waiter_ports.obj `if test -f 'cache_waiter_ports.c'; then $(CYGPATH_W) 'cache_waiter_ports.c'; else $(CYGPATH_W) '$(srcdir)/cache_waiter_ports.c'; fi`

varnishd-cache_backend.o: cache_backend.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_backend.o -MD -MP -MF $(DEPDIR)/varnishd-cache_backend.Tpo -c -o varnishd-cache_backend.o `test -f 'cache_backend.c' || echo '$(srcdir)/'`cache_backend.c
	$(am__mv) $(DEPDIR)/varnishd-cache_backend.Tpo $(DEPDIR)/varnishd-cache_backend.Po
#	source='cache_backend.c' object='varnishd-cache_backend.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_backend.o `test -f 'cache_backend.c' || echo '$(srcdir)/'`cache_backend.c

varnishd-cache_backend.obj: cache_backend.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_backend.obj -MD -MP -MF $(DEPDIR)/varnishd-cache_backend.Tpo -c -o varnishd-cache_backend.obj `if test -f 'cache_backend.c'; then $(CYGPATH_W) 'cache_backend.c'; else $(CYGPATH_W) '$(srcdir)/cache_backend.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-cache_backend.Tpo $(DEPDIR)/varnishd-cache_backend.Po
#	source='cache_backend.c' object='varnishd-cache_backend.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_backend.obj `if test -f 'cache_backend.c'; then $(CYGPATH_W) 'cache_backend.c'; else $(CYGPATH_W) '$(srcdir)/cache_backend.c'; fi`

varnishd-cache_backend_cfg.o: cache_backend_cfg.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_backend_cfg.o -MD -MP -MF $(DEPDIR)/varnishd-cache_backend_cfg.Tpo -c -o varnishd-cache_backend_cfg.o `test -f 'cache_backend_cfg.c' || echo '$(srcdir)/'`cache_backend_cfg.c
	$(am__mv) $(DEPDIR)/varnishd-cache_backend_cfg.Tpo $(DEPDIR)/varnishd-cache_backend_cfg.Po
#	source='cache_backend_cfg.c' object='varnishd-cache_backend_cfg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_backend_cfg.o `test -f 'cache_backend_cfg.c' || echo '$(srcdir)/'`cache_backend_cfg.c

varnishd-cache_backend_cfg.obj: cache_backend_cfg.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_backend_cfg.obj -MD -MP -MF $(DEPDIR)/varnishd-cache_backend_cfg.Tpo -c -o varnishd-cache_backend_cfg.obj `if test -f 'cache_backend_cfg.c'; then $(CYGPATH_W) 'cache_backend_cfg.c'; else $(CYGPATH_W) '$(srcdir)/cache_backend_cfg.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-cache_backend_cfg.Tpo $(DEPDIR)/varnishd-cache_backend_cfg.Po
#	source='cache_backend_cfg.c' object='varnishd-cache_backend_cfg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_backend_cfg.obj `if test -f 'cache_backend_cfg.c'; then $(CYGPATH_W) 'cache_backend_cfg.c'; else $(CYGPATH_W) '$(srcdir)/cache_backend_cfg.c'; fi`

varnishd-cache_backend_poll.o: cache_backend_poll.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_backend_poll.o -MD -MP -MF $(DEPDIR)/varnishd-cache_backend_poll.Tpo -c -o varnishd-cache_backend_poll.o `test -f 'cache_backend_poll.c' || echo '$(srcdir)/'`cache_backend_poll.c
	$(am__mv) $(DEPDIR)/varnishd-cache_backend_poll.Tpo $(DEPDIR)/varnishd-cache_backend_poll.Po
#	source='cache_backend_poll.c' object='varnishd-cache_backend_poll.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_backend_poll.o `test -f 'cache_backend_poll.c' || echo '$(srcdir)/'`cache_backend_poll.c

varnishd-cache_backend_poll.obj: cache_backend_poll.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_backend_poll.obj -MD -MP -MF $(DEPDIR)/varnishd-cache_backend_poll.Tpo -c -o varnishd-cache_backend_poll.obj `if test -f 'cache_backend_poll.c'; then $(CYGPATH_W) 'cache_backend_poll.c'; else $(CYGPATH_W) '$(srcdir)/cache_backend_poll.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-cache_backend_poll.Tpo $(DEPDIR)/varnishd-cache_backend_poll.Po
#	source='cache_backend_poll.c' object='varnishd-cache_backend_poll.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_backend_poll.obj `if test -f 'cache_backend_poll.c'; then $(CYGPATH_W) 'cache_backend_poll.c'; else $(CYGPATH_W) '$(srcdir)/cache_backend_poll.c'; fi`

varnishd-cache_ban.o: cache_ban.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_ban.o -MD -MP -MF $(DEPDIR)/varnishd-cache_ban.Tpo -c -o varnishd-cache_ban.o `test -f 'cache_ban.c' || echo '$(srcdir)/'`cache_ban.c
	$(am__mv) $(DEPDIR)/varnishd-cache_ban.Tpo $(DEPDIR)/varnishd-cache_ban.Po
#	source='cache_ban.c' object='varnishd-cache_ban.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_ban.o `test -f 'cache_ban.c' || echo '$(srcdir)/'`cache_ban.c

varnishd-cache_ban.obj: cache_ban.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_ban.obj -MD -MP -MF $(DEPDIR)/varnishd-cache_ban.Tpo -c -o varnishd-cache_ban.obj `if test -f 'cache_ban.c'; then $(CYGPATH_W) 'cache_ban.c'; else $(CYGPATH_W) '$(srcdir)/cache_ban.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-cache_ban.Tpo $(DEPDIR)/varnishd-cache_ban.Po
#	source='cache_ban.c' object='varnishd-cache_ban.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_ban.obj `if test -f 'cache_ban.c'; then $(CYGPATH_W) 'cache_ban.c'; else $(CYGPATH_W) '$(srcdir)/cache_ban.c'; fi`

varnishd-cache_center.o: cache_center.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_center.o -MD -MP -MF $(DEPDIR)/varnishd-cache_center.Tpo -c -o varnishd-cache_center.o `test -f 'cache_center.c' || echo '$(srcdir)/'`cache_center.c
	$(am__mv) $(DEPDIR)/varnishd-cache_center.Tpo $(DEPDIR)/varnishd-cache_center.Po
#	source='cache_center.c' object='varnishd-cache_center.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_center.o `test -f 'cache_center.c' || echo '$(srcdir)/'`cache_center.c

varnishd-cache_center.obj: cache_center.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_center.obj -MD -MP -MF $(DEPDIR)/varnishd-cache_center.Tpo -c -o varnishd-cache_center.obj `if test -f 'cache_center.c'; then $(CYGPATH_W) 'cache_center.c'; else $(CYGPATH_W) '$(srcdir)/cache_center.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-cache_center.Tpo $(DEPDIR)/varnishd-cache_center.Po
#	source='cache_center.c' object='varnishd-cache_center.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_center.obj `if test -f 'cache_center.c'; then $(CYGPATH_W) 'cache_center.c'; else $(CYGPATH_W) '$(srcdir)/cache_center.c'; fi`

varnishd-cache_cli.o: cache_cli.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_cli.o -MD -MP -MF $(DEPDIR)/varnishd-cache_cli.Tpo -c -o varnishd-cache_cli.o `test -f 'cache_cli.c' || echo '$(srcdir)/'`cache_cli.c
	$(am__mv) $(DEPDIR)/varnishd-cache_cli.Tpo $(DEPDIR)/varnishd-cache_cli.Po
#	source='cache_cli.c' object='varnishd-cache_cli.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_cli.o `test -f 'cache_cli.c' || echo '$(srcdir)/'`cache_cli.c

varnishd-cache_cli.obj: cache_cli.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_cli.obj -MD -MP -MF $(DEPDIR)/varnishd-cache_cli.Tpo -c -o varnishd-cache_cli.obj `if test -f 'cache_cli.c'; then $(CYGPATH_W) 'cache_cli.c'; else $(CYGPATH_W) '$(srcdir)/cache_cli.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-cache_cli.Tpo $(DEPDIR)/varnishd-cache_cli.Po
#	source='cache_cli.c' object='varnishd-cache_cli.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_cli.obj `if test -f 'cache_cli.c'; then $(CYGPATH_W) 'cache_cli.c'; else $(CYGPATH_W) '$(srcdir)/cache_cli.c'; fi`

varnishd-cache_dir.o: cache_dir.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_dir.o -MD -MP -MF $(DEPDIR)/varnishd-cache_dir.Tpo -c -o varnishd-cache_dir.o `test -f 'cache_dir.c' || echo '$(srcdir)/'`cache_dir.c
	$(am__mv) $(DEPDIR)/varnishd-cache_dir.Tpo $(DEPDIR)/varnishd-cache_dir.Po
#	source='cache_dir.c' object='varnishd-cache_dir.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_dir.o `test -f 'cache_dir.c' || echo '$(srcdir)/'`cache_dir.c

varnishd-cache_dir.obj: cache_dir.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_dir.obj -MD -MP -MF $(DEPDIR)/varnishd-cache_dir.Tpo -c -o varnishd-cache_dir.obj `if test -f 'cache_dir.c'; then $(CYGPATH_W) 'cache_dir.c'; else $(CYGPATH_W) '$(srcdir)/cache_dir.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-cache_dir.Tpo $(DEPDIR)/varnishd-cache_dir.Po
#	source='cache_dir.c' object='varnishd-cache_dir.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_dir.obj `if test -f 'cache_dir.c'; then $(CYGPATH_W) 'cache_dir.c'; else $(CYGPATH_W) '$(srcdir)/cache_dir.c'; fi`

varnishd-cache_dir_random.o: cache_dir_random.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_dir_random.o -MD -MP -MF $(DEPDIR)/varnishd-cache_dir_random.Tpo -c -o varnishd-cache_dir_random.o `test -f 'cache_dir_random.c' || echo '$(srcdir)/'`cache_dir_random.c
	$(am__mv) $(DEPDIR)/varnishd-cache_dir_random.Tpo $(DEPDIR)/varnishd-cache_dir_random.Po
#	source='cache_dir_random.c' object='varnishd-cache_dir_random.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_dir_random.o `test -f 'cache_dir_random.c' || echo '$(srcdir)/'`cache_dir_random.c

varnishd-cache_dir_random.obj: cache_dir_random.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_dir_random.obj -MD -MP -MF $(DEPDIR)/varnishd-cache_dir_random.Tpo -c -o varnishd-cache_dir_random.obj `if test -f 'cache_dir_random.c'; then $(CYGPATH_W) 'cache_dir_random.c'; else $(CYGPATH_W) '$(srcdir)/cache_dir_random.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-cache_dir_random.Tpo $(DEPDIR)/varnishd-cache_dir_random.Po
#	source='cache_dir_random.c' object='varnishd-cache_dir_random.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_dir_random.obj `if test -f 'cache_dir_random.c'; then $(CYGPATH_W) 'cache_dir_random.c'; else $(CYGPATH_W) '$(srcdir)/cache_dir_random.c'; fi`

varnishd-cache_dir_dns.o: cache_dir_dns.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_dir_dns.o -MD -MP -MF $(DEPDIR)/varnishd-cache_dir_dns.Tpo -c -o varnishd-cache_dir_dns.o `test -f 'cache_dir_dns.c' || echo '$(srcdir)/'`cache_dir_dns.c
	$(am__mv) $(DEPDIR)/varnishd-cache_dir_dns.Tpo $(DEPDIR)/varnishd-cache_dir_dns.Po
#	source='cache_dir_dns.c' object='varnishd-cache_dir_dns.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_dir_dns.o `test -f 'cache_dir_dns.c' || echo '$(srcdir)/'`cache_dir_dns.c

varnishd-cache_dir_dns.obj: cache_dir_dns.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_dir_dns.obj -MD -MP -MF $(DEPDIR)/varnishd-cache_dir_dns.Tpo -c -o varnishd-cache_dir_dns.obj `if test -f 'cache_dir_dns.c'; then $(CYGPATH_W) 'cache_dir_dns.c'; else $(CYGPATH_W) '$(srcdir)/cache_dir_dns.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-cache_dir_dns.Tpo $(DEPDIR)/varnishd-cache_dir_dns.Po
#	source='cache_dir_dns.c' object='varnishd-cache_dir_dns.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_dir_dns.obj `if test -f 'cache_dir_dns.c'; then $(CYGPATH_W) 'cache_dir_dns.c'; else $(CYGPATH_W) '$(srcdir)/cache_dir_dns.c'; fi`

varnishd-cache_dir_round_robin.o: cache_dir_round_robin.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_dir_round_robin.o -MD -MP -MF $(DEPDIR)/varnishd-cache_dir_round_robin.Tpo -c -o varnishd-cache_dir_round_robin.o `test -f 'cache_dir_round_robin.c' || echo '$(srcdir)/'`cache_dir_round_robin.c
	$(am__mv) $(DEPDIR)/varnishd-cache_dir_round_robin.Tpo $(DEPDIR)/varnishd-cache_dir_round_robin.Po
#	source='cache_dir_round_robin.c' object='varnishd-cache_dir_round_robin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_dir_round_robin.o `test -f 'cache_dir_round_robin.c' || echo '$(srcdir)/'`cache_dir_round_robin.c

varnishd-cache_dir_round_robin.obj: cache_dir_round_robin.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_dir_round_robin.obj -MD -MP -MF $(DEPDIR)/varnishd-cache_dir_round_robin.Tpo -c -o varnishd-cache_dir_round_robin.obj `if test -f 'cache_dir_round_robin.c'; then $(CYGPATH_W) 'cache_dir_round_robin.c'; else $(CYGPATH_W) '$(srcdir)/cache_dir_round_robin.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-cache_dir_round_robin.Tpo $(DEPDIR)/varnishd-cache_dir_round_robin.Po
#	source='cache_dir_round_robin.c' object='varnishd-cache_dir_round_robin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_dir_round_robin.obj `if test -f 'cache_dir_round_robin.c'; then $(CYGPATH_W) 'cache_dir_round_robin.c'; else $(CYGPATH_W) '$(srcdir)/cache_dir_round_robin.c'; fi`

varnishd-cache_esi_fetch.o: cache_esi_fetch.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_esi_fetch.o -MD -MP -MF $(DEPDIR)/varnishd-cache_esi_fetch.Tpo -c -o varnishd-cache_esi_fetch.o `test -f 'cache_esi_fetch.c' || echo '$(srcdir)/'`cache_esi_fetch.c
	$(am__mv) $(DEPDIR)/varnishd-cache_esi_fetch.Tpo $(DEPDIR)/varnishd-cache_esi_fetch.Po
#	source='cache_esi_fetch.c' object='varnishd-cache_esi_fetch.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_esi_fetch.o `test -f 'cache_esi_fetch.c' || echo '$(srcdir)/'`cache_esi_fetch.c

varnishd-cache_esi_fetch.obj: cache_esi_fetch.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_esi_fetch.obj -MD -MP -MF $(DEPDIR)/varnishd-cache_esi_fetch.Tpo -c -o varnishd-cache_esi_fetch.obj `if test -f 'cache_esi_fetch.c'; then $(CYGPATH_W) 'cache_esi_fetch.c'; else $(CYGPATH_W) '$(srcdir)/cache_esi_fetch.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-cache_esi_fetch.Tpo $(DEPDIR)/varnishd-cache_esi_fetch.Po
#	source='cache_esi_fetch.c' object='varnishd-cache_esi_fetch.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_esi_fetch.obj `if test -f 'cache_esi_fetch.c'; then $(CYGPATH_W) 'cache_esi_fetch.c'; else $(CYGPATH_W) '$(srcdir)/cache_esi_fetch.c'; fi`

varnishd-cache_esi_parse.o: cache_esi_parse.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_esi_parse.o -MD -MP -MF $(DEPDIR)/varnishd-cache_esi_parse.Tpo -c -o varnishd-cache_esi_parse.o `test -f 'cache_esi_parse.c' || echo '$(srcdir)/'`cache_esi_parse.c
	$(am__mv) $(DEPDIR)/varnishd-cache_esi_parse.Tpo $(DEPDIR)/varnishd-cache_esi_parse.Po
#	source='cache_esi_parse.c' object='varnishd-cache_esi_parse.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_esi_parse.o `test -f 'cache_esi_parse.c' || echo '$(srcdir)/'`cache_esi_parse.c

varnishd-cache_esi_parse.obj: cache_esi_parse.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_esi_parse.obj -MD -MP -MF $(DEPDIR)/varnishd-cache_esi_parse.Tpo -c -o varnishd-cache_esi_parse.obj `if test -f 'cache_esi_parse.c'; then $(CYGPATH_W) 'cache_esi_parse.c'; else $(CYGPATH_W) '$(srcdir)/cache_esi_parse.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-cache_esi_parse.Tpo $(DEPDIR)/varnishd-cache_esi_parse.Po
#	source='cache_esi_parse.c' object='varnishd-cache_esi_parse.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_esi_parse.obj `if test -f 'cache_esi_parse.c'; then $(CYGPATH_W) 'cache_esi_parse.c'; else $(CYGPATH_W) '$(srcdir)/cache_esi_parse.c'; fi`

varnishd-cache_esi_deliver.o: cache_esi_deliver.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_esi_deliver.o -MD -MP -MF $(DEPDIR)/varnishd-cache_esi_deliver.Tpo -c -o varnishd-cache_esi_deliver.o `test -f 'cache_esi_deliver.c' || echo '$(srcdir)/'`cache_esi_deliver.c
	$(am__mv) $(DEPDIR)/varnishd-cache_esi_deliver.Tpo $(DEPDIR)/varnishd-cache_esi_deliver.Po
#	source='cache_esi_deliver.c' object='varnishd-cache_esi_deliver.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_esi_deliver.o `test -f 'cache_esi_deliver.c' || echo '$(srcdir)/'`cache_esi_deliver.c

varnishd-cache_esi_deliver.obj: cache_esi_deliver.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_esi_deliver.obj -MD -MP -MF $(DEPDIR)/varnishd-cache_esi_deliver.Tpo -c -o varnishd-cache_esi_deliver.obj `if test -f 'cache_esi_deliver.c'; then $(CYGPATH_W) 'cache_esi_deliver.c'; else $(CYGPATH_W) '$(srcdir)/cache_esi_deliver.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-cache_esi_deliver.Tpo $(DEPDIR)/varnishd-cache_esi_deliver.Po
#	source='cache_esi_deliver.c' object='varnishd-cache_esi_deliver.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_esi_deliver.obj `if test -f 'cache_esi_deliver.c'; then $(CYGPATH_W) 'cache_esi_deliver.c'; else $(CYGPATH_W) '$(srcdir)/cache_esi_deliver.c'; fi`

varnishd-cache_expire.o: cache_expire.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_expire.o -MD -MP -MF $(DEPDIR)/varnishd-cache_expire.Tpo -c -o varnishd-cache_expire.o `test -f 'cache_expire.c' || echo '$(srcdir)/'`cache_expire.c
	$(am__mv) $(DEPDIR)/varnishd-cache_expire.Tpo $(DEPDIR)/varnishd-cache_expire.Po
#	source='cache_expire.c' object='varnishd-cache_expire.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_expire.o `test -f 'cache_expire.c' || echo '$(srcdir)/'`cache_expire.c

varnishd-cache_expire.obj: cache_expire.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_expire.obj -MD -MP -MF $(DEPDIR)/varnishd-cache_expire.Tpo -c -o varnishd-cache_expire.obj `if test -f 'cache_expire.c'; then $(CYGPATH_W) 'cache_expire.c'; else $(CYGPATH_W) '$(srcdir)/cache_expire.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-cache_expire.Tpo $(DEPDIR)/varnishd-cache_expire.Po
#	source='cache_expire.c' object='varnishd-cache_expire.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_expire.obj `if test -f 'cache_expire.c'; then $(CYGPATH_W) 'cache_expire.c'; else $(CYGPATH_W) '$(srcdir)/cache_expire.c'; fi`

varnishd-cache_fetch.o: cache_fetch.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_fetch.o -MD -MP -MF $(DEPDIR)/varnishd-cache_fetch.Tpo -c -o varnishd-cache_fetch.o `test -f 'cache_fetch.c' || echo '$(srcdir)/'`cache_fetch.c
	$(am__mv) $(DEPDIR)/varnishd-cache_fetch.Tpo $(DEPDIR)/varnishd-cache_fetch.Po
#	source='cache_fetch.c' object='varnishd-cache_fetch.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_fetch.o `test -f 'cache_fetch.c' || echo '$(srcdir)/'`cache_fetch.c

varnishd-cache_fetch.obj: cache_fetch.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_fetch.obj -MD -MP -MF $(DEPDIR)/varnishd-cache_fetch.Tpo -c -o varnishd-cache_fetch.obj `if test -f 'cache_fetch.c'; then $(CYGPATH_W) 'cache_fetch.c'; else $(CYGPATH_W) '$(srcdir)/cache_fetch.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-cache_fetch.Tpo $(DEPDIR)/varnishd-cache_fetch.Po
#	source='cache_fetch.c' object='varnishd-cache_fetch.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_fetch.obj `if test -f 'cache_fetch.c'; then $(CYGPATH_W) 'cache_fetch.c'; else $(CYGPATH_W) '$(srcdir)/cache_fetch.c'; fi`

varnishd-cache_gzip.o: cache_gzip.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_gzip.o -MD -MP -MF $(DEPDIR)/varnishd-cache_gzip.Tpo -c -o varnishd-cache_gzip.o `test -f 'cache_gzip.c' || echo '$(srcdir)/'`cache_gzip.c
	$(am__mv) $(DEPDIR)/varnishd-cache_gzip.Tpo $(DEPDIR)/varnishd-cache_gzip.Po
#	source='cache_gzip.c' object='varnishd-cache_gzip.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_gzip.o `test -f 'cache_gzip.c' || echo '$(srcdir)/'`cache_gzip.c

varnishd-cache_gzip.obj: cache_gzip.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_gzip.obj -MD -MP -MF $(DEPDIR)/varnishd-cache_gzip.Tpo -c -o varnishd-cache_gzip.obj `if test -f 'cache_gzip.c'; then $(CYGPATH_W) 'cache_gzip.c'; else $(CYGPATH_W) '$(srcdir)/cache_gzip.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-cache_gzip.Tpo $(DEPDIR)/varnishd-cache_gzip.Po
#	source='cache_gzip.c' object='varnishd-cache_gzip.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_gzip.obj `if test -f 'cache_gzip.c'; then $(CYGPATH_W) 'cache_gzip.c'; else $(CYGPATH_W) '$(srcdir)/cache_gzip.c'; fi`

varnishd-cache_hash.o: cache_hash.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_hash.o -MD -MP -MF $(DEPDIR)/varnishd-cache_hash.Tpo -c -o varnishd-cache_hash.o `test -f 'cache_hash.c' || echo '$(srcdir)/'`cache_hash.c
	$(am__mv) $(DEPDIR)/varnishd-cache_hash.Tpo $(DEPDIR)/varnishd-cache_hash.Po
#	source='cache_hash.c' object='varnishd-cache_hash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_hash.o `test -f 'cache_hash.c' || echo '$(srcdir)/'`cache_hash.c

varnishd-cache_hash.obj: cache_hash.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_hash.obj -MD -MP -MF $(DEPDIR)/varnishd-cache_hash.Tpo -c -o varnishd-cache_hash.obj `if test -f 'cache_hash.c'; then $(CYGPATH_W) 'cache_hash.c'; else $(CYGPATH_W) '$(srcdir)/cache_hash.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-cache_hash.Tpo $(DEPDIR)/varnishd-cache_hash.Po
#	source='cache_hash.c' object='varnishd-cache_hash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_hash.obj `if test -f 'cache_hash.c'; then $(CYGPATH_W) 'cache_hash.c'; else $(CYGPATH_W) '$(srcdir)/cache_hash.c'; fi`

varnishd-cache_http.o: cache_http.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_http.o -MD -MP -MF $(DEPDIR)/varnishd-cache_http.Tpo -c -o varnishd-cache_http.o `test -f 'cache_http.c' || echo '$(srcdir)/'`cache_http.c
	$(am__mv) $(DEPDIR)/varnishd-cache_http.Tpo $(DEPDIR)/varnishd-cache_http.Po
#	source='cache_http.c' object='varnishd-cache_http.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_http.o `test -f 'cache_http.c' || echo '$(srcdir)/'`cache_http.c

varnishd-cache_http.obj: cache_http.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_http.obj -MD -MP -MF $(DEPDIR)/varnishd-cache_http.Tpo -c -o varnishd-cache_http.obj `if test -f 'cache_http.c'; then $(CYGPATH_W) 'cache_http.c'; else $(CYGPATH_W) '$(srcdir)/cache_http.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-cache_http.Tpo $(DEPDIR)/varnishd-cache_http.Po
#	source='cache_http.c' object='varnishd-cache_http.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_http.obj `if test -f 'cache_http.c'; then $(CYGPATH_W) 'cache_http.c'; else $(CYGPATH_W) '$(srcdir)/cache_http.c'; fi`

varnishd-cache_httpconn.o: cache_httpconn.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_httpconn.o -MD -MP -MF $(DEPDIR)/varnishd-cache_httpconn.Tpo -c -o varnishd-cache_httpconn.o `test -f 'cache_httpconn.c' || echo '$(srcdir)/'`cache_httpconn.c
	$(am__mv) $(DEPDIR)/varnishd-cache_httpconn.Tpo $(DEPDIR)/varnishd-cache_httpconn.Po
#	source='cache_httpconn.c' object='varnishd-cache_httpconn.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_httpconn.o `test -f 'cache_httpconn.c' || echo '$(srcdir)/'`cache_httpconn.c

varnishd-cache_httpconn.obj: cache_httpconn.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_httpconn.obj -MD -MP -MF $(DEPDIR)/varnishd-cache_httpconn.Tpo -c -o varnishd-cache_httpconn.obj `if test -f 'cache_httpconn.c'; then $(CYGPATH_W) 'cache_httpconn.c'; else $(CYGPATH_W) '$(srcdir)/cache_httpconn.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-cache_httpconn.Tpo $(DEPDIR)/varnishd-cache_httpconn.Po
#	source='cache_httpconn.c' object='varnishd-cache_httpconn.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_httpconn.obj `if test -f 'cache_httpconn.c'; then $(CYGPATH_W) 'cache_httpconn.c'; else $(CYGPATH_W) '$(srcdir)/cache_httpconn.c'; fi`

varnishd-cache_main.o: cache_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_main.o -MD -MP -MF $(DEPDIR)/varnishd-cache_main.Tpo -c -o varnishd-cache_main.o `test -f 'cache_main.c' || echo '$(srcdir)/'`cache_main.c
	$(am__mv) $(DEPDIR)/varnishd-cache_main.Tpo $(DEPDIR)/varnishd-cache_main.Po
#	source='cache_main.c' object='varnishd-cache_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_main.o `test -f 'cache_main.c' || echo '$(srcdir)/'`cache_main.c

varnishd-cache_main.obj: cache_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_main.obj -MD -MP -MF $(DEPDIR)/varnishd-cache_main.Tpo -c -o varnishd-cache_main.obj `if test -f 'cache_main.c'; then $(CYGPATH_W) 'cache_main.c'; else $(CYGPATH_W) '$(srcdir)/cache_main.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-cache_main.Tpo $(DEPDIR)/varnishd-cache_main.Po
#	source='cache_main.c' object='varnishd-cache_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_main.obj `if test -f 'cache_main.c'; then $(CYGPATH_W) 'cache_main.c'; else $(CYGPATH_W) '$(srcdir)/cache_main.c'; fi`

varnishd-cache_lck.o: cache_lck.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_lck.o -MD -MP -MF $(DEPDIR)/varnishd-cache_lck.Tpo -c -o varnishd-cache_lck.o `test -f 'cache_lck.c' || echo '$(srcdir)/'`cache_lck.c
	$(am__mv) $(DEPDIR)/varnishd-cache_lck.Tpo $(DEPDIR)/varnishd-cache_lck.Po
#	source='cache_lck.c' object='varnishd-cache_lck.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_lck.o `test -f 'cache_lck.c' || echo '$(srcdir)/'`cache_lck.c

varnishd-cache_lck.obj: cache_lck.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_lck.obj -MD -MP -MF $(DEPDIR)/varnishd-cache_lck.Tpo -c -o varnishd-cache_lck.obj `if test -f 'cache_lck.c'; then $(CYGPATH_W) 'cache_lck.c'; else $(CYGPATH_W) '$(srcdir)/cache_lck.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-cache_lck.Tpo $(DEPDIR)/varnishd-cache_lck.Po
#	source='cache_lck.c' object='varnishd-cache_lck.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_lck.obj `if test -f 'cache_lck.c'; then $(CYGPATH_W) 'cache_lck.c'; else $(CYGPATH_W) '$(srcdir)/cache_lck.c'; fi`

varnishd-cache_panic.o: cache_panic.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_panic.o -MD -MP -MF $(DEPDIR)/varnishd-cache_panic.Tpo -c -o varnishd-cache_panic.o `test -f 'cache_panic.c' || echo '$(srcdir)/'`cache_panic.c
	$(am__mv) $(DEPDIR)/varnishd-cache_panic.Tpo $(DEPDIR)/varnishd-cache_panic.Po
#	source='cache_panic.c' object='varnishd-cache_panic.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_panic.o `test -f 'cache_panic.c' || echo '$(srcdir)/'`cache_panic.c

varnishd-cache_panic.obj: cache_panic.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_panic.obj -MD -MP -MF $(DEPDIR)/varnishd-cache_panic.Tpo -c -o varnishd-cache_panic.obj `if test -f 'cache_panic.c'; then $(CYGPATH_W) 'cache_panic.c'; else $(CYGPATH_W) '$(srcdir)/cache_panic.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-cache_panic.Tpo $(DEPDIR)/varnishd-cache_panic.Po
#	source='cache_panic.c' object='varnishd-cache_panic.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_panic.obj `if test -f 'cache_panic.c'; then $(CYGPATH_W) 'cache_panic.c'; else $(CYGPATH_W) '$(srcdir)/cache_panic.c'; fi`

varnishd-cache_pipe.o: cache_pipe.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_pipe.o -MD -MP -MF $(DEPDIR)/varnishd-cache_pipe.Tpo -c -o varnishd-cache_pipe.o `test -f 'cache_pipe.c' || echo '$(srcdir)/'`cache_pipe.c
	$(am__mv) $(DEPDIR)/varnishd-cache_pipe.Tpo $(DEPDIR)/varnishd-cache_pipe.Po
#	source='cache_pipe.c' object='varnishd-cache_pipe.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_pipe.o `test -f 'cache_pipe.c' || echo '$(srcdir)/'`cache_pipe.c

varnishd-cache_pipe.obj: cache_pipe.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_pipe.obj -MD -MP -MF $(DEPDIR)/varnishd-cache_pipe.Tpo -c -o varnishd-cache_pipe.obj `if test -f 'cache_pipe.c'; then $(CYGPATH_W) 'cache_pipe.c'; else $(CYGPATH_W) '$(srcdir)/cache_pipe.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-cache_pipe.Tpo $(DEPDIR)/varnishd-cache_pipe.Po
#	source='cache_pipe.c' object='varnishd-cache_pipe.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_pipe.obj `if test -f 'cache_pipe.c'; then $(CYGPATH_W) 'cache_pipe.c'; else $(CYGPATH_W) '$(srcdir)/cache_pipe.c'; fi`

varnishd-cache_pool.o: cache_pool.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_pool.o -MD -MP -MF $(DEPDIR)/varnishd-cache_pool.Tpo -c -o varnishd-cache_pool.o `test -f 'cache_pool.c' || echo '$(srcdir)/'`cache_pool.c
	$(am__mv) $(DEPDIR)/varnishd-cache_pool.Tpo $(DEPDIR)/varnishd-cache_pool.Po
#	source='cache_pool.c' object='varnishd-cache_pool.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_pool.o `test -f 'cache_pool.c' || echo '$(srcdir)/'`cache_pool.c

varnishd-cache_pool.obj: cache_pool.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_pool.obj -MD -MP -MF $(DEPDIR)/varnishd-cache_pool.Tpo -c -o varnishd-cache_pool.obj `if test -f 'cache_pool.c'; then $(CYGPATH_W) 'cache_pool.c'; else $(CYGPATH_W) '$(srcdir)/cache_pool.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-cache_pool.Tpo $(DEPDIR)/varnishd-cache_pool.Po
#	source='cache_pool.c' object='varnishd-cache_pool.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_pool.obj `if test -f 'cache_pool.c'; then $(CYGPATH_W) 'cache_pool.c'; else $(CYGPATH_W) '$(srcdir)/cache_pool.c'; fi`

varnishd-cache_response.o: cache_response.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_response.o -MD -MP -MF $(DEPDIR)/varnishd-cache_response.Tpo -c -o varnishd-cache_response.o `test -f 'cache_response.c' || echo '$(srcdir)/'`cache_response.c
	$(am__mv) $(DEPDIR)/varnishd-cache_response.Tpo $(DEPDIR)/varnishd-cache_response.Po
#	source='cache_response.c' object='varnishd-cache_response.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_response.o `test -f 'cache_response.c' || echo '$(srcdir)/'`cache_response.c

varnishd-cache_response.obj: cache_response.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_response.obj -MD -MP -MF $(DEPDIR)/varnishd-cache_response.Tpo -c -o varnishd-cache_response.obj `if test -f 'cache_response.c'; then $(CYGPATH_W) 'cache_response.c'; else $(CYGPATH_W) '$(srcdir)/cache_response.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-cache_response.Tpo $(DEPDIR)/varnishd-cache_response.Po
#	source='cache_response.c' object='varnishd-cache_response.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_response.obj `if test -f 'cache_response.c'; then $(CYGPATH_W) 'cache_response.c'; else $(CYGPATH_W) '$(srcdir)/cache_response.c'; fi`

varnishd-cache_session.o: cache_session.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_session.o -MD -MP -MF $(DEPDIR)/varnishd-cache_session.Tpo -c -o varnishd-cache_session.o `test -f 'cache_session.c' || echo '$(srcdir)/'`cache_session.c
	$(am__mv) $(DEPDIR)/varnishd-cache_session.Tpo $(DEPDIR)/varnishd-cache_session.Po
#	source='cache_session.c' object='varnishd-cache_session.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_session.o `test -f 'cache_session.c' || echo '$(srcdir)/'`cache_session.c

varnishd-cache_session.obj: cache_session.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_session.obj -MD -MP -MF $(DEPDIR)/varnishd-cache_session.Tpo -c -o varnishd-cache_session.obj `if test -f 'cache_session.c'; then $(CYGPATH_W) 'cache_session.c'; else $(CYGPATH_W) '$(srcdir)/cache_session.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-cache_session.Tpo $(DEPDIR)/varnishd-cache_session.Po
#	source='cache_session.c' object='varnishd-cache_session.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_session.obj `if test -f 'cache_session.c'; then $(CYGPATH_W) 'cache_session.c'; else $(CYGPATH_W) '$(srcdir)/cache_session.c'; fi`

varnishd-cache_shmlog.o: cache_shmlog.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_shmlog.o -MD -MP -MF $(DEPDIR)/varnishd-cache_shmlog.Tpo -c -o varnishd-cache_shmlog.o `test -f 'cache_shmlog.c' || echo '$(srcdir)/'`cache_shmlog.c
	$(am__mv) $(DEPDIR)/varnishd-cache_shmlog.Tpo $(DEPDIR)/varnishd-cache_shmlog.Po
#	source='cache_shmlog.c' object='varnishd-cache_shmlog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_shmlog.o `test -f 'cache_shmlog.c' || echo '$(srcdir)/'`cache_shmlog.c

varnishd-cache_shmlog.obj: cache_shmlog.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_shmlog.obj -MD -MP -MF $(DEPDIR)/varnishd-cache_shmlog.Tpo -c -o varnishd-cache_shmlog.obj `if test -f 'cache_shmlog.c'; then $(CYGPATH_W) 'cache_shmlog.c'; else $(CYGPATH_W) '$(srcdir)/cache_shmlog.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-cache_shmlog.Tpo $(DEPDIR)/varnishd-cache_shmlog.Po
#	source='cache_shmlog.c' object='varnishd-cache_shmlog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_shmlog.obj `if test -f 'cache_shmlog.c'; then $(CYGPATH_W) 'cache_shmlog.c'; else $(CYGPATH_W) '$(srcdir)/cache_shmlog.c'; fi`

varnishd-cache_vary.o: cache_vary.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_vary.o -MD -MP -MF $(DEPDIR)/varnishd-cache_vary.Tpo -c -o varnishd-cache_vary.o `test -f 'cache_vary.c' || echo '$(srcdir)/'`cache_vary.c
	$(am__mv) $(DEPDIR)/varnishd-cache_vary.Tpo $(DEPDIR)/varnishd-cache_vary.Po
#	source='cache_vary.c' object='varnishd-cache_vary.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_vary.o `test -f 'cache_vary.c' || echo '$(srcdir)/'`cache_vary.c

varnishd-cache_vary.obj: cache_vary.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_vary.obj -MD -MP -MF $(DEPDIR)/varnishd-cache_vary.Tpo -c -o varnishd-cache_vary.obj `if test -f 'cache_vary.c'; then $(CYGPATH_W) 'cache_vary.c'; else $(CYGPATH_W) '$(srcdir)/cache_vary.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-cache_vary.Tpo $(DEPDIR)/varnishd-cache_vary.Po
#	source='cache_vary.c' object='varnishd-cache_vary.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_vary.obj `if test -f 'cache_vary.c'; then $(CYGPATH_W) 'cache_vary.c'; else $(CYGPATH_W) '$(srcdir)/cache_vary.c'; fi`

varnishd-cache_vcl.o: cache_vcl.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_vcl.o -MD -MP -MF $(DEPDIR)/varnishd-cache_vcl.Tpo -c -o varnishd-cache_vcl.o `test -f 'cache_vcl.c' || echo '$(srcdir)/'`cache_vcl.c
	$(am__mv) $(DEPDIR)/varnishd-cache_vcl.Tpo $(DEPDIR)/varnishd-cache_vcl.Po
#	source='cache_vcl.c' object='varnishd-cache_vcl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_vcl.o `test -f 'cache_vcl.c' || echo '$(srcdir)/'`cache_vcl.c

varnishd-cache_vcl.obj: cache_vcl.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_vcl.obj -MD -MP -MF $(DEPDIR)/varnishd-cache_vcl.Tpo -c -o varnishd-cache_vcl.obj `if test -f 'cache_vcl.c'; then $(CYGPATH_W) 'cache_vcl.c'; else $(CYGPATH_W) '$(srcdir)/cache_vcl.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-cache_vcl.Tpo $(DEPDIR)/varnishd-cache_vcl.Po
#	source='cache_vcl.c' object='varnishd-cache_vcl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_vcl.obj `if test -f 'cache_vcl.c'; then $(CYGPATH_W) 'cache_vcl.c'; else $(CYGPATH_W) '$(srcdir)/cache_vcl.c'; fi`

varnishd-cache_vrt.o: cache_vrt.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_vrt.o -MD -MP -MF $(DEPDIR)/varnishd-cache_vrt.Tpo -c -o varnishd-cache_vrt.o `test -f 'cache_vrt.c' || echo '$(srcdir)/'`cache_vrt.c
	$(am__mv) $(DEPDIR)/varnishd-cache_vrt.Tpo $(DEPDIR)/varnishd-cache_vrt.Po
#	source='cache_vrt.c' object='varnishd-cache_vrt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_vrt.o `test -f 'cache_vrt.c' || echo '$(srcdir)/'`cache_vrt.c

varnishd-cache_vrt.obj: cache_vrt.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_vrt.obj -MD -MP -MF $(DEPDIR)/varnishd-cache_vrt.Tpo -c -o varnishd-cache_vrt.obj `if test -f 'cache_vrt.c'; then $(CYGPATH_W) 'cache_vrt.c'; else $(CYGPATH_W) '$(srcdir)/cache_vrt.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-cache_vrt.Tpo $(DEPDIR)/varnishd-cache_vrt.Po
#	source='cache_vrt.c' object='varnishd-cache_vrt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_vrt.obj `if test -f 'cache_vrt.c'; then $(CYGPATH_W) 'cache_vrt.c'; else $(CYGPATH_W) '$(srcdir)/cache_vrt.c'; fi`

varnishd-cache_vrt_re.o: cache_vrt_re.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_vrt_re.o -MD -MP -MF $(DEPDIR)/varnishd-cache_vrt_re.Tpo -c -o varnishd-cache_vrt_re.o `test -f 'cache_vrt_re.c' || echo '$(srcdir)/'`cache_vrt_re.c
	$(am__mv) $(DEPDIR)/varnishd-cache_vrt_re.Tpo $(DEPDIR)/varnishd-cache_vrt_re.Po
#	source='cache_vrt_re.c' object='varnishd-cache_vrt_re.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_vrt_re.o `test -f 'cache_vrt_re.c' || echo '$(srcdir)/'`cache_vrt_re.c

varnishd-cache_vrt_re.obj: cache_vrt_re.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_vrt_re.obj -MD -MP -MF $(DEPDIR)/varnishd-cache_vrt_re.Tpo -c -o varnishd-cache_vrt_re.obj `if test -f 'cache_vrt_re.c'; then $(CYGPATH_W) 'cache_vrt_re.c'; else $(CYGPATH_W) '$(srcdir)/cache_vrt_re.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-cache_vrt_re.Tpo $(DEPDIR)/varnishd-cache_vrt_re.Po
#	source='cache_vrt_re.c' object='varnishd-cache_vrt_re.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_vrt_re.obj `if test -f 'cache_vrt_re.c'; then $(CYGPATH_W) 'cache_vrt_re.c'; else $(CYGPATH_W) '$(srcdir)/cache_vrt_re.c'; fi`

varnishd-cache_vrt_var.o: cache_vrt_var.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_vrt_var.o -MD -MP -MF $(DEPDIR)/varnishd-cache_vrt_var.Tpo -c -o varnishd-cache_vrt_var.o `test -f 'cache_vrt_var.c' || echo '$(srcdir)/'`cache_vrt_var.c
	$(am__mv) $(DEPDIR)/varnishd-cache_vrt_var.Tpo $(DEPDIR)/varnishd-cache_vrt_var.Po
#	source='cache_vrt_var.c' object='varnishd-cache_vrt_var.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_vrt_var.o `test -f 'cache_vrt_var.c' || echo '$(srcdir)/'`cache_vrt_var.c

varnishd-cache_vrt_var.obj: cache_vrt_var.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_vrt_var.obj -MD -MP -MF $(DEPDIR)/varnishd-cache_vrt_var.Tpo -c -o varnishd-cache_vrt_var.obj `if test -f 'cache_vrt_var.c'; then $(CYGPATH_W) 'cache_vrt_var.c'; else $(CYGPATH_W) '$(srcdir)/cache_vrt_var.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-cache_vrt_var.Tpo $(DEPDIR)/varnishd-cache_vrt_var.Po
#	source='cache_vrt_var.c' object='varnishd-cache_vrt_var.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_vrt_var.obj `if test -f 'cache_vrt_var.c'; then $(CYGPATH_W) 'cache_vrt_var.c'; else $(CYGPATH_W) '$(srcdir)/cache_vrt_var.c'; fi`

varnishd-cache_vrt_vmod.o: cache_vrt_vmod.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_vrt_vmod.o -MD -MP -MF $(DEPDIR)/varnishd-cache_vrt_vmod.Tpo -c -o varnishd-cache_vrt_vmod.o `test -f 'cache_vrt_vmod.c' || echo '$(srcdir)/'`cache_vrt_vmod.c
	$(am__mv) $(DEPDIR)/varnishd-cache_vrt_vmod.Tpo $(DEPDIR)/varnishd-cache_vrt_vmod.Po
#	source='cache_vrt_vmod.c' object='varnishd-cache_vrt_vmod.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_vrt_vmod.o `test -f 'cache_vrt_vmod.c' || echo '$(srcdir)/'`cache_vrt_vmod.c

varnishd-cache_vrt_vmod.obj: cache_vrt_vmod.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_vrt_vmod.obj -MD -MP -MF $(DEPDIR)/varnishd-cache_vrt_vmod.Tpo -c -o varnishd-cache_vrt_vmod.obj `if test -f 'cache_vrt_vmod.c'; then $(CYGPATH_W) 'cache_vrt_vmod.c'; else $(CYGPATH_W) '$(srcdir)/cache_vrt_vmod.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-cache_vrt_vmod.Tpo $(DEPDIR)/varnishd-cache_vrt_vmod.Po
#	source='cache_vrt_vmod.c' object='varnishd-cache_vrt_vmod.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_vrt_vmod.obj `if test -f 'cache_vrt_vmod.c'; then $(CYGPATH_W) 'cache_vrt_vmod.c'; else $(CYGPATH_W) '$(srcdir)/cache_vrt_vmod.c'; fi`

varnishd-cache_wrw.o: cache_wrw.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_wrw.o -MD -MP -MF $(DEPDIR)/varnishd-cache_wrw.Tpo -c -o varnishd-cache_wrw.o `test -f 'cache_wrw.c' || echo '$(srcdir)/'`cache_wrw.c
	$(am__mv) $(DEPDIR)/varnishd-cache_wrw.Tpo $(DEPDIR)/varnishd-cache_wrw.Po
#	source='cache_wrw.c' object='varnishd-cache_wrw.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_wrw.o `test -f 'cache_wrw.c' || echo '$(srcdir)/'`cache_wrw.c

varnishd-cache_wrw.obj: cache_wrw.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_wrw.obj -MD -MP -MF $(DEPDIR)/varnishd-cache_wrw.Tpo -c -o varnishd-cache_wrw.obj `if test -f 'cache_wrw.c'; then $(CYGPATH_W) 'cache_wrw.c'; else $(CYGPATH_W) '$(srcdir)/cache_wrw.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-cache_wrw.Tpo $(DEPDIR)/varnishd-cache_wrw.Po
#	source='cache_wrw.c' object='varnishd-cache_wrw.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_wrw.obj `if test -f 'cache_wrw.c'; then $(CYGPATH_W) 'cache_wrw.c'; else $(CYGPATH_W) '$(srcdir)/cache_wrw.c'; fi`

varnishd-cache_ws.o: cache_ws.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_ws.o -MD -MP -MF $(DEPDIR)/varnishd-cache_ws.Tpo -c -o varnishd-cache_ws.o `test -f 'cache_ws.c' || echo '$(srcdir)/'`cache_ws.c
	$(am__mv) $(DEPDIR)/varnishd-cache_ws.Tpo $(DEPDIR)/varnishd-cache_ws.Po
#	source='cache_ws.c' object='varnishd-cache_ws.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_ws.o `test -f 'cache_ws.c' || echo '$(srcdir)/'`cache_ws.c

varnishd-cache_ws.obj: cache_ws.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-cache_ws.obj -MD -MP -MF $(DEPDIR)/varnishd-cache_ws.Tpo -c -o varnishd-cache_ws.obj `if test -f 'cache_ws.c'; then $(CYGPATH_W) 'cache_ws.c'; else $(CYGPATH_W) '$(srcdir)/cache_ws.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-cache_ws.Tpo $(DEPDIR)/varnishd-cache_ws.Po
#	source='cache_ws.c' object='varnishd-cache_ws.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-cache_ws.obj `if test -f 'cache_ws.c'; then $(CYGPATH_W) 'cache_ws.c'; else $(CYGPATH_W) '$(srcdir)/cache_ws.c'; fi`

varnishd-hash_classic.o: hash_classic.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-hash_classic.o -MD -MP -MF $(DEPDIR)/varnishd-hash_classic.Tpo -c -o varnishd-hash_classic.o `test -f 'hash_classic.c' || echo '$(srcdir)/'`hash_classic.c
	$(am__mv) $(DEPDIR)/varnishd-hash_classic.Tpo $(DEPDIR)/varnishd-hash_classic.Po
#	source='hash_classic.c' object='varnishd-hash_classic.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-hash_classic.o `test -f 'hash_classic.c' || echo '$(srcdir)/'`hash_classic.c

varnishd-hash_classic.obj: hash_classic.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-hash_classic.obj -MD -MP -MF $(DEPDIR)/varnishd-hash_classic.Tpo -c -o varnishd-hash_classic.obj `if test -f 'hash_classic.c'; then $(CYGPATH_W) 'hash_classic.c'; else $(CYGPATH_W) '$(srcdir)/hash_classic.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-hash_classic.Tpo $(DEPDIR)/varnishd-hash_classic.Po
#	source='hash_classic.c' object='varnishd-hash_classic.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-hash_classic.obj `if test -f 'hash_classic.c'; then $(CYGPATH_W) 'hash_classic.c'; else $(CYGPATH_W) '$(srcdir)/hash_classic.c'; fi`

varnishd-hash_critbit.o: hash_critbit.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-hash_critbit.o -MD -MP -MF $(DEPDIR)/varnishd-hash_critbit.Tpo -c -o varnishd-hash_critbit.o `test -f 'hash_critbit.c' || echo '$(srcdir)/'`hash_critbit.c
	$(am__mv) $(DEPDIR)/varnishd-hash_critbit.Tpo $(DEPDIR)/varnishd-hash_critbit.Po
#	source='hash_critbit.c' object='varnishd-hash_critbit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-hash_critbit.o `test -f 'hash_critbit.c' || echo '$(srcdir)/'`hash_critbit.c

varnishd-hash_critbit.obj: hash_critbit.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-hash_critbit.obj -MD -MP -MF $(DEPDIR)/varnishd-hash_critbit.Tpo -c -o varnishd-hash_critbit.obj `if test -f 'hash_critbit.c'; then $(CYGPATH_W) 'hash_critbit.c'; else $(CYGPATH_W) '$(srcdir)/hash_critbit.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-hash_critbit.Tpo $(DEPDIR)/varnishd-hash_critbit.Po
#	source='hash_critbit.c' object='varnishd-hash_critbit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-hash_critbit.obj `if test -f 'hash_critbit.c'; then $(CYGPATH_W) 'hash_critbit.c'; else $(CYGPATH_W) '$(srcdir)/hash_critbit.c'; fi`

varnishd-hash_simple_list.o: hash_simple_list.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-hash_simple_list.o -MD -MP -MF $(DEPDIR)/varnishd-hash_simple_list.Tpo -c -o varnishd-hash_simple_list.o `test -f 'hash_simple_list.c' || echo '$(srcdir)/'`hash_simple_list.c
	$(am__mv) $(DEPDIR)/varnishd-hash_simple_list.Tpo $(DEPDIR)/varnishd-hash_simple_list.Po
#	source='hash_simple_list.c' object='varnishd-hash_simple_list.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-hash_simple_list.o `test -f 'hash_simple_list.c' || echo '$(srcdir)/'`hash_simple_list.c

varnishd-hash_simple_list.obj: hash_simple_list.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-hash_simple_list.obj -MD -MP -MF $(DEPDIR)/varnishd-hash_simple_list.Tpo -c -o varnishd-hash_simple_list.obj `if test -f 'hash_simple_list.c'; then $(CYGPATH_W) 'hash_simple_list.c'; else $(CYGPATH_W) '$(srcdir)/hash_simple_list.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-hash_simple_list.Tpo $(DEPDIR)/varnishd-hash_simple_list.Po
#	source='hash_simple_list.c' object='varnishd-hash_simple_list.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-hash_simple_list.obj `if test -f 'hash_simple_list.c'; then $(CYGPATH_W) 'hash_simple_list.c'; else $(CYGPATH_W) '$(srcdir)/hash_simple_list.c'; fi`

varnishd-mgt_child.o: mgt_child.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-mgt_child.o -MD -MP -MF $(DEPDIR)/varnishd-mgt_child.Tpo -c -o varnishd-mgt_child.o `test -f 'mgt_child.c' || echo '$(srcdir)/'`mgt_child.c
	$(am__mv) $(DEPDIR)/varnishd-mgt_child.Tpo $(DEPDIR)/varnishd-mgt_child.Po
#	source='mgt_child.c' object='varnishd-mgt_child.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-mgt_child.o `test -f 'mgt_child.c' || echo '$(srcdir)/'`mgt_child.c

varnishd-mgt_child.obj: mgt_child.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-mgt_child.obj -MD -MP -MF $(DEPDIR)/varnishd-mgt_child.Tpo -c -o varnishd-mgt_child.obj `if test -f 'mgt_child.c'; then $(CYGPATH_W) 'mgt_child.c'; else $(CYGPATH_W) '$(srcdir)/mgt_child.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-mgt_child.Tpo $(DEPDIR)/varnishd-mgt_child.Po
#	source='mgt_child.c' object='varnishd-mgt_child.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-mgt_child.obj `if test -f 'mgt_child.c'; then $(CYGPATH_W) 'mgt_child.c'; else $(CYGPATH_W) '$(srcdir)/mgt_child.c'; fi`

varnishd-mgt_cli.o: mgt_cli.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-mgt_cli.o -MD -MP -MF $(DEPDIR)/varnishd-mgt_cli.Tpo -c -o varnishd-mgt_cli.o `test -f 'mgt_cli.c' || echo '$(srcdir)/'`mgt_cli.c
	$(am__mv) $(DEPDIR)/varnishd-mgt_cli.Tpo $(DEPDIR)/varnishd-mgt_cli.Po
#	source='mgt_cli.c' object='varnishd-mgt_cli.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-mgt_cli.o `test -f 'mgt_cli.c' || echo '$(srcdir)/'`mgt_cli.c

varnishd-mgt_cli.obj: mgt_cli.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-mgt_cli.obj -MD -MP -MF $(DEPDIR)/varnishd-mgt_cli.Tpo -c -o varnishd-mgt_cli.obj `if test -f 'mgt_cli.c'; then $(CYGPATH_W) 'mgt_cli.c'; else $(CYGPATH_W) '$(srcdir)/mgt_cli.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-mgt_cli.Tpo $(DEPDIR)/varnishd-mgt_cli.Po
#	source='mgt_cli.c' object='varnishd-mgt_cli.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-mgt_cli.obj `if test -f 'mgt_cli.c'; then $(CYGPATH_W) 'mgt_cli.c'; else $(CYGPATH_W) '$(srcdir)/mgt_cli.c'; fi`

varnishd-mgt_param.o: mgt_param.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-mgt_param.o -MD -MP -MF $(DEPDIR)/varnishd-mgt_param.Tpo -c -o varnishd-mgt_param.o `test -f 'mgt_param.c' || echo '$(srcdir)/'`mgt_param.c
	$(am__mv) $(DEPDIR)/varnishd-mgt_param.Tpo $(DEPDIR)/varnishd-mgt_param.Po
#	source='mgt_param.c' object='varnishd-mgt_param.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-mgt_param.o `test -f 'mgt_param.c' || echo '$(srcdir)/'`mgt_param.c

varnishd-mgt_param.obj: mgt_param.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-mgt_param.obj -MD -MP -MF $(DEPDIR)/varnishd-mgt_param.Tpo -c -o varnishd-mgt_param.obj `if test -f 'mgt_param.c'; then $(CYGPATH_W) 'mgt_param.c'; else $(CYGPATH_W) '$(srcdir)/mgt_param.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-mgt_param.Tpo $(DEPDIR)/varnishd-mgt_param.Po
#	source='mgt_param.c' object='varnishd-mgt_param.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-mgt_param.obj `if test -f 'mgt_param.c'; then $(CYGPATH_W) 'mgt_param.c'; else $(CYGPATH_W) '$(srcdir)/mgt_param.c'; fi`

varnishd-mgt_pool.o: mgt_pool.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-mgt_pool.o -MD -MP -MF $(DEPDIR)/varnishd-mgt_pool.Tpo -c -o varnishd-mgt_pool.o `test -f 'mgt_pool.c' || echo '$(srcdir)/'`mgt_pool.c
	$(am__mv) $(DEPDIR)/varnishd-mgt_pool.Tpo $(DEPDIR)/varnishd-mgt_pool.Po
#	source='mgt_pool.c' object='varnishd-mgt_pool.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-mgt_pool.o `test -f 'mgt_pool.c' || echo '$(srcdir)/'`mgt_pool.c

varnishd-mgt_pool.obj: mgt_pool.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-mgt_pool.obj -MD -MP -MF $(DEPDIR)/varnishd-mgt_pool.Tpo -c -o varnishd-mgt_pool.obj `if test -f 'mgt_pool.c'; then $(CYGPATH_W) 'mgt_pool.c'; else $(CYGPATH_W) '$(srcdir)/mgt_pool.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-mgt_pool.Tpo $(DEPDIR)/varnishd-mgt_pool.Po
#	source='mgt_pool.c' object='varnishd-mgt_pool.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-mgt_pool.obj `if test -f 'mgt_pool.c'; then $(CYGPATH_W) 'mgt_pool.c'; else $(CYGPATH_W) '$(srcdir)/mgt_pool.c'; fi`

varnishd-mgt_sandbox.o: mgt_sandbox.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-mgt_sandbox.o -MD -MP -MF $(DEPDIR)/varnishd-mgt_sandbox.Tpo -c -o varnishd-mgt_sandbox.o `test -f 'mgt_sandbox.c' || echo '$(srcdir)/'`mgt_sandbox.c
	$(am__mv) $(DEPDIR)/varnishd-mgt_sandbox.Tpo $(DEPDIR)/varnishd-mgt_sandbox.Po
#	source='mgt_sandbox.c' object='varnishd-mgt_sandbox.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-mgt_sandbox.o `test -f 'mgt_sandbox.c' || echo '$(srcdir)/'`mgt_sandbox.c

varnishd-mgt_sandbox.obj: mgt_sandbox.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-mgt_sandbox.obj -MD -MP -MF $(DEPDIR)/varnishd-mgt_sandbox.Tpo -c -o varnishd-mgt_sandbox.obj `if test -f 'mgt_sandbox.c'; then $(CYGPATH_W) 'mgt_sandbox.c'; else $(CYGPATH_W) '$(srcdir)/mgt_sandbox.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-mgt_sandbox.Tpo $(DEPDIR)/varnishd-mgt_sandbox.Po
#	source='mgt_sandbox.c' object='varnishd-mgt_sandbox.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-mgt_sandbox.obj `if test -f 'mgt_sandbox.c'; then $(CYGPATH_W) 'mgt_sandbox.c'; else $(CYGPATH_W) '$(srcdir)/mgt_sandbox.c'; fi`

varnishd-mgt_sandbox_solaris.o: mgt_sandbox_solaris.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-mgt_sandbox_solaris.o -MD -MP -MF $(DEPDIR)/varnishd-mgt_sandbox_solaris.Tpo -c -o varnishd-mgt_sandbox_solaris.o `test -f 'mgt_sandbox_solaris.c' || echo '$(srcdir)/'`mgt_sandbox_solaris.c
	$(am__mv) $(DEPDIR)/varnishd-mgt_sandbox_solaris.Tpo $(DEPDIR)/varnishd-mgt_sandbox_solaris.Po
#	source='mgt_sandbox_solaris.c' object='varnishd-mgt_sandbox_solaris.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-mgt_sandbox_solaris.o `test -f 'mgt_sandbox_solaris.c' || echo '$(srcdir)/'`mgt_sandbox_solaris.c

varnishd-mgt_sandbox_solaris.obj: mgt_sandbox_solaris.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-mgt_sandbox_solaris.obj -MD -MP -MF $(DEPDIR)/varnishd-mgt_sandbox_solaris.Tpo -c -o varnishd-mgt_sandbox_solaris.obj `if test -f 'mgt_sandbox_solaris.c'; then $(CYGPATH_W) 'mgt_sandbox_solaris.c'; else $(CYGPATH_W) '$(srcdir)/mgt_sandbox_solaris.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-mgt_sandbox_solaris.Tpo $(DEPDIR)/varnishd-mgt_sandbox_solaris.Po
#	source='mgt_sandbox_solaris.c' object='varnishd-mgt_sandbox_solaris.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-mgt_sandbox_solaris.obj `if test -f 'mgt_sandbox_solaris.c'; then $(CYGPATH_W) 'mgt_sandbox_solaris.c'; else $(CYGPATH_W) '$(srcdir)/mgt_sandbox_solaris.c'; fi`

varnishd-mgt_shmem.o: mgt_shmem.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-mgt_shmem.o -MD -MP -MF $(DEPDIR)/varnishd-mgt_shmem.Tpo -c -o varnishd-mgt_shmem.o `test -f 'mgt_shmem.c' || echo '$(srcdir)/'`mgt_shmem.c
	$(am__mv) $(DEPDIR)/varnishd-mgt_shmem.Tpo $(DEPDIR)/varnishd-mgt_shmem.Po
#	source='mgt_shmem.c' object='varnishd-mgt_shmem.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-mgt_shmem.o `test -f 'mgt_shmem.c' || echo '$(srcdir)/'`mgt_shmem.c

varnishd-mgt_shmem.obj: mgt_shmem.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-mgt_shmem.obj -MD -MP -MF $(DEPDIR)/varnishd-mgt_shmem.Tpo -c -o varnishd-mgt_shmem.obj `if test -f 'mgt_shmem.c'; then $(CYGPATH_W) 'mgt_shmem.c'; else $(CYGPATH_W) '$(srcdir)/mgt_shmem.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-mgt_shmem.Tpo $(DEPDIR)/varnishd-mgt_shmem.Po
#	source='mgt_shmem.c' object='varnishd-mgt_shmem.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-mgt_shmem.obj `if test -f 'mgt_shmem.c'; then $(CYGPATH_W) 'mgt_shmem.c'; else $(CYGPATH_W) '$(srcdir)/mgt_shmem.c'; fi`

varnishd-mgt_vcc.o: mgt_vcc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-mgt_vcc.o -MD -MP -MF $(DEPDIR)/varnishd-mgt_vcc.Tpo -c -o varnishd-mgt_vcc.o `test -f 'mgt_vcc.c' || echo '$(srcdir)/'`mgt_vcc.c
	$(am__mv) $(DEPDIR)/varnishd-mgt_vcc.Tpo $(DEPDIR)/varnishd-mgt_vcc.Po
#	source='mgt_vcc.c' object='varnishd-mgt_vcc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-mgt_vcc.o `test -f 'mgt_vcc.c' || echo '$(srcdir)/'`mgt_vcc.c

varnishd-mgt_vcc.obj: mgt_vcc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-mgt_vcc.obj -MD -MP -MF $(DEPDIR)/varnishd-mgt_vcc.Tpo -c -o varnishd-mgt_vcc.obj `if test -f 'mgt_vcc.c'; then $(CYGPATH_W) 'mgt_vcc.c'; else $(CYGPATH_W) '$(srcdir)/mgt_vcc.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-mgt_vcc.Tpo $(DEPDIR)/varnishd-mgt_vcc.Po
#	source='mgt_vcc.c' object='varnishd-mgt_vcc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-mgt_vcc.obj `if test -f 'mgt_vcc.c'; then $(CYGPATH_W) 'mgt_vcc.c'; else $(CYGPATH_W) '$(srcdir)/mgt_vcc.c'; fi`

varnishd-rfc2616.o: rfc2616.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-rfc2616.o -MD -MP -MF $(DEPDIR)/varnishd-rfc2616.Tpo -c -o varnishd-rfc2616.o `test -f 'rfc2616.c' || echo '$(srcdir)/'`rfc2616.c
	$(am__mv) $(DEPDIR)/varnishd-rfc2616.Tpo $(DEPDIR)/varnishd-rfc2616.Po
#	source='rfc2616.c' object='varnishd-rfc2616.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-rfc2616.o `test -f 'rfc2616.c' || echo '$(srcdir)/'`rfc2616.c

varnishd-rfc2616.obj: rfc2616.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-rfc2616.obj -MD -MP -MF $(DEPDIR)/varnishd-rfc2616.Tpo -c -o varnishd-rfc2616.obj `if test -f 'rfc2616.c'; then $(CYGPATH_W) 'rfc2616.c'; else $(CYGPATH_W) '$(srcdir)/rfc2616.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-rfc2616.Tpo $(DEPDIR)/varnishd-rfc2616.Po
#	source='rfc2616.c' object='varnishd-rfc2616.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-rfc2616.obj `if test -f 'rfc2616.c'; then $(CYGPATH_W) 'rfc2616.c'; else $(CYGPATH_W) '$(srcdir)/rfc2616.c'; fi`

varnishd-stevedore.o: stevedore.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-stevedore.o -MD -MP -MF $(DEPDIR)/varnishd-stevedore.Tpo -c -o varnishd-stevedore.o `test -f 'stevedore.c' || echo '$(srcdir)/'`stevedore.c
	$(am__mv) $(DEPDIR)/varnishd-stevedore.Tpo $(DEPDIR)/varnishd-stevedore.Po
#	source='stevedore.c' object='varnishd-stevedore.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-stevedore.o `test -f 'stevedore.c' || echo '$(srcdir)/'`stevedore.c

varnishd-stevedore.obj: stevedore.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-stevedore.obj -MD -MP -MF $(DEPDIR)/varnishd-stevedore.Tpo -c -o varnishd-stevedore.obj `if test -f 'stevedore.c'; then $(CYGPATH_W) 'stevedore.c'; else $(CYGPATH_W) '$(srcdir)/stevedore.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-stevedore.Tpo $(DEPDIR)/varnishd-stevedore.Po
#	source='stevedore.c' object='varnishd-stevedore.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-stevedore.obj `if test -f 'stevedore.c'; then $(CYGPATH_W) 'stevedore.c'; else $(CYGPATH_W) '$(srcdir)/stevedore.c'; fi`

varnishd-storage_file.o: storage_file.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-storage_file.o -MD -MP -MF $(DEPDIR)/varnishd-storage_file.Tpo -c -o varnishd-storage_file.o `test -f 'storage_file.c' || echo '$(srcdir)/'`storage_file.c
	$(am__mv) $(DEPDIR)/varnishd-storage_file.Tpo $(DEPDIR)/varnishd-storage_file.Po
#	source='storage_file.c' object='varnishd-storage_file.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-storage_file.o `test -f 'storage_file.c' || echo '$(srcdir)/'`storage_file.c

varnishd-storage_file.obj: storage_file.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-storage_file.obj -MD -MP -MF $(DEPDIR)/varnishd-storage_file.Tpo -c -o varnishd-storage_file.obj `if test -f 'storage_file.c'; then $(CYGPATH_W) 'storage_file.c'; else $(CYGPATH_W) '$(srcdir)/storage_file.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-storage_file.Tpo $(DEPDIR)/varnishd-storage_file.Po
#	source='storage_file.c' object='varnishd-storage_file.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-storage_file.obj `if test -f 'storage_file.c'; then $(CYGPATH_W) 'storage_file.c'; else $(CYGPATH_W) '$(srcdir)/storage_file.c'; fi`

varnishd-storage_malloc.o: storage_malloc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-storage_malloc.o -MD -MP -MF $(DEPDIR)/varnishd-storage_malloc.Tpo -c -o varnishd-storage_malloc.o `test -f 'storage_malloc.c' || echo '$(srcdir)/'`storage_malloc.c
	$(am__mv) $(DEPDIR)/varnishd-storage_malloc.Tpo $(DEPDIR)/varnishd-storage_malloc.Po
#	source='storage_malloc.c' object='varnishd-storage_malloc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-storage_malloc.o `test -f 'storage_malloc.c' || echo '$(srcdir)/'`storage_malloc.c

varnishd-storage_malloc.obj: storage_malloc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-storage_malloc.obj -MD -MP -MF $(DEPDIR)/varnishd-storage_malloc.Tpo -c -o varnishd-storage_malloc.obj `if test -f 'storage_malloc.c'; then $(CYGPATH_W) 'storage_malloc.c'; else $(CYGPATH_W) '$(srcdir)/storage_malloc.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-storage_malloc.Tpo $(DEPDIR)/varnishd-storage_malloc.Po
#	source='storage_malloc.c' object='varnishd-storage_malloc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-storage_malloc.obj `if test -f 'storage_malloc.c'; then $(CYGPATH_W) 'storage_malloc.c'; else $(CYGPATH_W) '$(srcdir)/storage_malloc.c'; fi`

varnishd-storage_persistent.o: storage_persistent.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-storage_persistent.o -MD -MP -MF $(DEPDIR)/varnishd-storage_persistent.Tpo -c -o varnishd-storage_persistent.o `test -f 'storage_persistent.c' || echo '$(srcdir)/'`storage_persistent.c
	$(am__mv) $(DEPDIR)/varnishd-storage_persistent.Tpo $(DEPDIR)/varnishd-storage_persistent.Po
#	source='storage_persistent.c' object='varnishd-storage_persistent.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-storage_persistent.o `test -f 'storage_persistent.c' || echo '$(srcdir)/'`storage_persistent.c

varnishd-storage_persistent.obj: storage_persistent.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-storage_persistent.obj -MD -MP -MF $(DEPDIR)/varnishd-storage_persistent.Tpo -c -o varnishd-storage_persistent.obj `if test -f 'storage_persistent.c'; then $(CYGPATH_W) 'storage_persistent.c'; else $(CYGPATH_W) '$(srcdir)/storage_persistent.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-storage_persistent.Tpo $(DEPDIR)/varnishd-storage_persistent.Po
#	source='storage_persistent.c' object='varnishd-storage_persistent.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-storage_persistent.obj `if test -f 'storage_persistent.c'; then $(CYGPATH_W) 'storage_persistent.c'; else $(CYGPATH_W) '$(srcdir)/storage_persistent.c'; fi`

varnishd-storage_persistent_mgt.o: storage_persistent_mgt.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-storage_persistent_mgt.o -MD -MP -MF $(DEPDIR)/varnishd-storage_persistent_mgt.Tpo -c -o varnishd-storage_persistent_mgt.o `test -f 'storage_persistent_mgt.c' || echo '$(srcdir)/'`storage_persistent_mgt.c
	$(am__mv) $(DEPDIR)/varnishd-storage_persistent_mgt.Tpo $(DEPDIR)/varnishd-storage_persistent_mgt.Po
#	source='storage_persistent_mgt.c' object='varnishd-storage_persistent_mgt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-storage_persistent_mgt.o `test -f 'storage_persistent_mgt.c' || echo '$(srcdir)/'`storage_persistent_mgt.c

varnishd-storage_persistent_mgt.obj: storage_persistent_mgt.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-storage_persistent_mgt.obj -MD -MP -MF $(DEPDIR)/varnishd-storage_persistent_mgt.Tpo -c -o varnishd-storage_persistent_mgt.obj `if test -f 'storage_persistent_mgt.c'; then $(CYGPATH_W) 'storage_persistent_mgt.c'; else $(CYGPATH_W) '$(srcdir)/storage_persistent_mgt.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-storage_persistent_mgt.Tpo $(DEPDIR)/varnishd-storage_persistent_mgt.Po
#	source='storage_persistent_mgt.c' object='varnishd-storage_persistent_mgt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-storage_persistent_mgt.obj `if test -f 'storage_persistent_mgt.c'; then $(CYGPATH_W) 'storage_persistent_mgt.c'; else $(CYGPATH_W) '$(srcdir)/storage_persistent_mgt.c'; fi`

varnishd-storage_persistent_silo.o: storage_persistent_silo.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-storage_persistent_silo.o -MD -MP -MF $(DEPDIR)/varnishd-storage_persistent_silo.Tpo -c -o varnishd-storage_persistent_silo.o `test -f 'storage_persistent_silo.c' || echo '$(srcdir)/'`storage_persistent_silo.c
	$(am__mv) $(DEPDIR)/varnishd-storage_persistent_silo.Tpo $(DEPDIR)/varnishd-storage_persistent_silo.Po
#	source='storage_persistent_silo.c' object='varnishd-storage_persistent_silo.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-storage_persistent_silo.o `test -f 'storage_persistent_silo.c' || echo '$(srcdir)/'`storage_persistent_silo.c

varnishd-storage_persistent_silo.obj: storage_persistent_silo.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-storage_persistent_silo.obj -MD -MP -MF $(DEPDIR)/varnishd-storage_persistent_silo.Tpo -c -o varnishd-storage_persistent_silo.obj `if test -f 'storage_persistent_silo.c'; then $(CYGPATH_W) 'storage_persistent_silo.c'; else $(CYGPATH_W) '$(srcdir)/storage_persistent_silo.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-storage_persistent_silo.Tpo $(DEPDIR)/varnishd-storage_persistent_silo.Po
#	source='storage_persistent_silo.c' object='varnishd-storage_persistent_silo.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-storage_persistent_silo.obj `if test -f 'storage_persistent_silo.c'; then $(CYGPATH_W) 'storage_persistent_silo.c'; else $(CYGPATH_W) '$(srcdir)/storage_persistent_silo.c'; fi`

varnishd-storage_persistent_subr.o: storage_persistent_subr.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-storage_persistent_subr.o -MD -MP -MF $(DEPDIR)/varnishd-storage_persistent_subr.Tpo -c -o varnishd-storage_persistent_subr.o `test -f 'storage_persistent_subr.c' || echo '$(srcdir)/'`storage_persistent_subr.c
	$(am__mv) $(DEPDIR)/varnishd-storage_persistent_subr.Tpo $(DEPDIR)/varnishd-storage_persistent_subr.Po
#	source='storage_persistent_subr.c' object='varnishd-storage_persistent_subr.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-storage_persistent_subr.o `test -f 'storage_persistent_subr.c' || echo '$(srcdir)/'`storage_persistent_subr.c

varnishd-storage_persistent_subr.obj: storage_persistent_subr.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-storage_persistent_subr.obj -MD -MP -MF $(DEPDIR)/varnishd-storage_persistent_subr.Tpo -c -o varnishd-storage_persistent_subr.obj `if test -f 'storage_persistent_subr.c'; then $(CYGPATH_W) 'storage_persistent_subr.c'; else $(CYGPATH_W) '$(srcdir)/storage_persistent_subr.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-storage_persistent_subr.Tpo $(DEPDIR)/varnishd-storage_persistent_subr.Po
#	source='storage_persistent_subr.c' object='varnishd-storage_persistent_subr.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-storage_persistent_subr.obj `if test -f 'storage_persistent_subr.c'; then $(CYGPATH_W) 'storage_persistent_subr.c'; else $(CYGPATH_W) '$(srcdir)/storage_persistent_subr.c'; fi`

varnishd-storage_synth.o: storage_synth.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-storage_synth.o -MD -MP -MF $(DEPDIR)/varnishd-storage_synth.Tpo -c -o varnishd-storage_synth.o `test -f 'storage_synth.c' || echo '$(srcdir)/'`storage_synth.c
	$(am__mv) $(DEPDIR)/varnishd-storage_synth.Tpo $(DEPDIR)/varnishd-storage_synth.Po
#	source='storage_synth.c' object='varnishd-storage_synth.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-storage_synth.o `test -f 'storage_synth.c' || echo '$(srcdir)/'`storage_synth.c

varnishd-storage_synth.obj: storage_synth.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-storage_synth.obj -MD -MP -MF $(DEPDIR)/varnishd-storage_synth.Tpo -c -o varnishd-storage_synth.obj `if test -f 'storage_synth.c'; then $(CYGPATH_W) 'storage_synth.c'; else $(CYGPATH_W) '$(srcdir)/storage_synth.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-storage_synth.Tpo $(DEPDIR)/varnishd-storage_synth.Po
#	source='storage_synth.c' object='varnishd-storage_synth.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-storage_synth.obj `if test -f 'storage_synth.c'; then $(CYGPATH_W) 'storage_synth.c'; else $(CYGPATH_W) '$(srcdir)/storage_synth.c'; fi`

varnishd-storage_umem.o: storage_umem.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-storage_umem.o -MD -MP -MF $(DEPDIR)/varnishd-storage_umem.Tpo -c -o varnishd-storage_umem.o `test -f 'storage_umem.c' || echo '$(srcdir)/'`storage_umem.c
	$(am__mv) $(DEPDIR)/varnishd-storage_umem.Tpo $(DEPDIR)/varnishd-storage_umem.Po
#	source='storage_umem.c' object='varnishd-storage_umem.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-storage_umem.o `test -f 'storage_umem.c' || echo '$(srcdir)/'`storage_umem.c

varnishd-storage_umem.obj: storage_umem.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-storage_umem.obj -MD -MP -MF $(DEPDIR)/varnishd-storage_umem.Tpo -c -o varnishd-storage_umem.obj `if test -f 'storage_umem.c'; then $(CYGPATH_W) 'storage_umem.c'; else $(CYGPATH_W) '$(srcdir)/storage_umem.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-storage_umem.Tpo $(DEPDIR)/varnishd-storage_umem.Po
#	source='storage_umem.c' object='varnishd-storage_umem.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-storage_umem.obj `if test -f 'storage_umem.c'; then $(CYGPATH_W) 'storage_umem.c'; else $(CYGPATH_W) '$(srcdir)/storage_umem.c'; fi`

varnishd-stevedore_utils.o: stevedore_utils.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-stevedore_utils.o -MD -MP -MF $(DEPDIR)/varnishd-stevedore_utils.Tpo -c -o varnishd-stevedore_utils.o `test -f 'stevedore_utils.c' || echo '$(srcdir)/'`stevedore_utils.c
	$(am__mv) $(DEPDIR)/varnishd-stevedore_utils.Tpo $(DEPDIR)/varnishd-stevedore_utils.Po
#	source='stevedore_utils.c' object='varnishd-stevedore_utils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-stevedore_utils.o `test -f 'stevedore_utils.c' || echo '$(srcdir)/'`stevedore_utils.c

varnishd-stevedore_utils.obj: stevedore_utils.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-stevedore_utils.obj -MD -MP -MF $(DEPDIR)/varnishd-stevedore_utils.Tpo -c -o varnishd-stevedore_utils.obj `if test -f 'stevedore_utils.c'; then $(CYGPATH_W) 'stevedore_utils.c'; else $(CYGPATH_W) '$(srcdir)/stevedore_utils.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-stevedore_utils.Tpo $(DEPDIR)/varnishd-stevedore_utils.Po
#	source='stevedore_utils.c' object='varnishd-stevedore_utils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-stevedore_utils.obj `if test -f 'stevedore_utils.c'; then $(CYGPATH_W) 'stevedore_utils.c'; else $(CYGPATH_W) '$(srcdir)/stevedore_utils.c'; fi`

varnishd-varnishd.o: varnishd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-varnishd.o -MD -MP -MF $(DEPDIR)/varnishd-varnishd.Tpo -c -o varnishd-varnishd.o `test -f 'varnishd.c' || echo '$(srcdir)/'`varnishd.c
	$(am__mv) $(DEPDIR)/varnishd-varnishd.Tpo $(DEPDIR)/varnishd-varnishd.Po
#	source='varnishd.c' object='varnishd-varnishd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-varnishd.o `test -f 'varnishd.c' || echo '$(srcdir)/'`varnishd.c

varnishd-varnishd.obj: varnishd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-varnishd.obj -MD -MP -MF $(DEPDIR)/varnishd-varnishd.Tpo -c -o varnishd-varnishd.obj `if test -f 'varnishd.c'; then $(CYGPATH_W) 'varnishd.c'; else $(CYGPATH_W) '$(srcdir)/varnishd.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-varnishd.Tpo $(DEPDIR)/varnishd-varnishd.Po
#	source='varnishd.c' object='varnishd-varnishd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-varnishd.obj `if test -f 'varnishd.c'; then $(CYGPATH_W) 'varnishd.c'; else $(CYGPATH_W) '$(srcdir)/varnishd.c'; fi`

varnishd-vsm.o: vsm.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-vsm.o -MD -MP -MF $(DEPDIR)/varnishd-vsm.Tpo -c -o varnishd-vsm.o `test -f 'vsm.c' || echo '$(srcdir)/'`vsm.c
	$(am__mv) $(DEPDIR)/varnishd-vsm.Tpo $(DEPDIR)/varnishd-vsm.Po
#	source='vsm.c' object='varnishd-vsm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-vsm.o `test -f 'vsm.c' || echo '$(srcdir)/'`vsm.c

varnishd-vsm.obj: vsm.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -MT varnishd-vsm.obj -MD -MP -MF $(DEPDIR)/varnishd-vsm.Tpo -c -o varnishd-vsm.obj `if test -f 'vsm.c'; then $(CYGPATH_W) 'vsm.c'; else $(CYGPATH_W) '$(srcdir)/vsm.c'; fi`
	$(am__mv) $(DEPDIR)/varnishd-vsm.Tpo $(DEPDIR)/varnishd-vsm.Po
#	source='vsm.c' object='varnishd-vsm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnishd_CFLAGS) $(CFLAGS) -c -o varnishd-vsm.obj `if test -f 'vsm.c'; then $(CYGPATH_W) 'vsm.c'; else $(CYGPATH_W) '$(srcdir)/vsm.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-man1: $(dist_man_MANS)
	@$(NORMAL_INSTALL)
	test -z "$(man1dir)" || $(MKDIR_P) "$(DESTDIR)$(man1dir)"
	@list=''; test -n "$(man1dir)" || exit 0; \
	{ for i in $$list; do echo "$$i"; done; \
	l2='$(dist_man_MANS)'; for i in $$l2; do echo "$$i"; done | \
	  sed -n '/\.1[a-z]*$$/p'; \
	} | while read p; do \
	  if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; echo "$$p"; \
	done | \
	sed -e 'n;s,.*/,,;p;h;s,.*\.,,;s,^[^1][0-9a-z]*$$,1,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,' | \
	sed 'N;N;s,\n, ,g' | { \
	list=; while read file base inst; do \
	  if test "$$base" = "$$inst"; then list="$$list $$file"; else \
	    echo " $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man1dir)/$$inst'"; \
	    $(INSTALL_DATA) "$$file" "$(DESTDIR)$(man1dir)/$$inst" || exit $$?; \
	  fi; \
	done; \
	for i in $$list; do echo "$$i"; done | $(am__base_list) | \
	while read files; do \
	  test -z "$$files" || { \
	    echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(man1dir)'"; \
	    $(INSTALL_DATA) $$files "$(DESTDIR)$(man1dir)" || exit $$?; }; \
	done; }

uninstall-man1:
	@$(NORMAL_UNINSTALL)
	@list=''; test -n "$(man1dir)" || exit 0; \
	files=`{ for i in $$list; do echo "$$i"; done; \
	l2='$(dist_man_MANS)'; for i in $$l2; do echo "$$i"; done | \
	  sed -n '/\.1[a-z]*$$/p'; \
	} | sed -e 's,.*/,,;h;s,.*\.,,;s,^[^1][0-9a-z]*$$,1,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,'`; \
	test -z "$$files" || { \
	  echo " ( cd '$(DESTDIR)$(man1dir)' && rm -f" $$files ")"; \
	  cd "$(DESTDIR)$(man1dir)" && rm -f $$files; }

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@list='$(MANS)'; if test -n "$$list"; then \
	  list=`for p in $$list; do \
	    if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	    if test -f "$$d$$p"; then echo "$$d$$p"; else :; fi; done`; \
	  if test -n "$$list" && \
	    grep 'ab help2man is required to generate this page' $$list >/dev/null; then \
	    echo "error: found man pages containing the \`missing help2man' replacement text:" >&2; \
	    grep -l 'ab help2man is required to generate this page' $$list | sed 's/^/         /' >&2; \
	    echo "       to fix them, install help2man, remove and regenerate the man pages;" >&2; \
	    echo "       typically \`make maintainer-clean' will remove them" >&2; \
	    exit 1; \
	  else :; fi; \
	else :; fi
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(MANS) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(sbindir)" "$(DESTDIR)$(man1dir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-sbinPROGRAMS \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-man

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-sbinPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man: install-man1

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-man uninstall-sbinPROGRAMS

uninstall-man: uninstall-man1

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-sbinPROGRAMS ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-man1 install-pdf install-pdf-am install-ps \
	install-ps-am install-sbinPROGRAMS install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-man uninstall-man1 \
	uninstall-sbinPROGRAMS


#
# Turn the default.vcl file into a C-string we can include in the program.
#
default_vcl.h:	default.vcl
	echo '/*' > $@
	echo ' * NB:  This file is machine generated, DO NOT EDIT!' >> $@
	echo ' *' >> $@
	echo ' * Edit default.vcl instead and run make' >> $@
	echo ' *' >> $@
	echo ' */' >> $@
	echo '' >> $@
	sed -e 's/"/\\"/g' \
	    -e 's/$$/\\n"/' \
	    -e 's/^/ "/' $(srcdir)/default.vcl >> $@

# Explicitly record dependency
mgt_vcc.c:	default_vcl.h

varnishd.1: $(top_srcdir)/doc/sphinx/reference/varnishd.rst
	${RST2MAN} $? $@
#	@echo "========================================"
#	@echo "You need rst2man installed to make dist"
#	@echo "========================================"
#	@false

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
